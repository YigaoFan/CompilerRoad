export module VbaSpec;

import std;
import Parser;
using namespace std;

export enum class TokType : int
{
    EOF,
    Expression,
    Terminal0,
    Terminal1,
    Terminal2,
    Terminal3,
    Terminal4,
    Terminal5,
    Terminal6,
    Terminal7,
    Terminal8,
    Terminal9,
    Terminal10,
    Terminal11,
    Terminal12,
    Terminal13,
    Terminal14,
    Terminal15,
    Terminal16,
    Terminal17,
    Terminal18,
    Terminal19,
    Terminal20,
    Terminal21,
    Terminal22,
    Terminal23,
    Terminal24,
    Terminal25,
    Terminal26,
    Terminal27,
    Terminal28,
    Terminal29,
    Terminal30,
    Terminal31,
    Terminal32,
    Terminal33,
    Terminal34,
    Terminal35,
    Terminal36,
    Terminal37,
    Terminal38,
    Terminal39,
    Terminal40,
    Terminal41,
    Terminal42,
    Terminal43,
    Terminal44,
    Terminal45,
    Terminal46,
    Terminal47,
    Terminal48,
    Terminal49,
    Terminal50,
    Terminal51,
    Terminal52,
    Terminal53,
    Terminal54,
    Terminal55,
    Terminal56,
    Terminal57,
    Terminal58,
    Terminal59,
    Terminal60,
    Terminal61,
    Terminal62,
    Terminal63,
    Terminal64,
    Terminal65,
    Terminal66,
    Terminal67,
    Terminal68,
    Terminal69,
    Terminal70,
    Terminal71,
    Terminal72,
    Terminal73,
    Terminal74,
    Terminal75,
    Terminal76,
    Terminal77,
    Terminal78,
    Terminal79,
    Terminal80,
    Terminal81,
    Terminal82,
    Terminal83,
    Terminal84,
    Terminal85,
    Terminal86,
    Terminal87,
    Terminal88,
    Terminal89,
    Terminal90,
    Terminal91,
    Terminal92,
    Terminal93,
    Terminal94,
    Terminal95,
    Terminal96,
    Terminal97,
    Terminal98,
    Terminal99,
    Terminal100,
    Terminal101,
    Terminal102,
    Terminal103,
    Terminal104,
    Terminal105,
    Terminal106,
    Terminal107,
    Terminal108,
    Terminal109,
    Terminal110,
    Terminal111,
    Terminal112,
    Terminal113,
    Terminal114,
    Terminal115,
    Terminal116,
    Terminal117,
    Terminal118,
    Terminal119,
    Terminal120,
    Terminal121,
    Terminal122,
    Terminal123,
    Terminal124,
    Terminal125,
    Terminal126,
    Terminal127,
    Terminal128,
    Terminal129,
    Terminal130,
    Terminal131,
    Terminal132,
    Terminal133,
    Terminal134,
    Terminal135,
    Terminal136,
    Terminal137,
    Terminal138,
    Terminal139,
    Terminal140,
    Terminal141,
    Terminal142,
    Terminal143,
    Terminal144,
    Terminal145,
    Terminal146,
    Terminal147,
    Terminal148,
    Terminal149,
    Terminal150,
    Terminal151,
    Terminal152,
    Terminal153,
    Terminal154,
    Terminal155,
    Terminal156,
    Terminal157,
    Terminal158,
    Terminal159,
    Terminal160,
    Terminal161,
    Terminal162,
    Terminal163,
    Terminal164,
    Terminal165,
    Terminal166,
    Terminal167,
    Terminal168,
    Terminal169,
    Terminal170,
    Terminal171,
    Terminal172,
    Terminal173,
    Terminal174,
    Terminal175,
    Terminal176,
    Terminal177,
    Terminal178,
    Terminal179,
    Terminal180,
    Terminal181,
    Terminal182,
    Terminal183,
    Terminal184,
    Terminal185,
    Terminal186,
    Terminal187,
    Terminal188,
    Terminal189,
    Terminal190,
    Terminal191,
    Terminal192,
    Terminal193,
    Terminal194,
    Terminal195,
    Terminal196,
    Terminal197,
    Terminal198,
    Terminal199,
    Terminal200,
    Terminal201,
    Terminal202,
    Terminal203,
    Terminal204,
    Terminal205,
    Terminal206,
    Terminal207,
    Terminal208,
    Terminal209,
    Terminal210,
    Terminal211,
    Terminal212,
    Terminal213,
    Terminal214,
    Terminal215,
    Terminal216,
    Terminal217,
    Terminal218,
    Terminal219,
    Terminal220,
    Terminal221,
    Terminal222,
    Terminal223,
    Terminal224,
    Terminal225,
    Terminal226,
    Terminal227,
    Terminal228,
    LineContinuation,
    Whitespace,
    Comment,
    CommentEndOfLine,
    RemStatement,
    Integer,
    Float,
    DateOrTime,
    QuotedIdentifier,
    NormalString,
    Identifier,
    ForeignName,
    TypedName,
    TypeSuffix,
};

export template<>
struct formatter<TokType, char>
{
    constexpr auto parse(std::format_parse_context& ctx) -> std::format_parse_context::iterator
    {
        auto it = ctx.begin();
        return it;
    }
    template<class FormatContext>
    constexpr auto format(TokType const& t, FormatContext& fc) const
    {
        string_view s;
        switch (t)
        {
        case TokType::EOF: s = "EOF"; break;
        case TokType::Expression: s = "Expression"; break;
        case TokType::Comment: s = "Comment"; break;
        case TokType::CommentEndOfLine: s = "CommentEndOfLine"; break;
        case TokType::DateOrTime: s = "DateOrTime"; break;
        case TokType::Float: s = "Float"; break;
        case TokType::ForeignName: s = "ForeignName"; break;
        case TokType::Identifier: s = "Identifier"; break;
        case TokType::Integer: s = "Integer"; break;
        case TokType::LineContinuation: s = "LineContinuation"; break;
        case TokType::NormalString: s = "NormalString"; break;
        case TokType::QuotedIdentifier: s = "QuotedIdentifier"; break;
        case TokType::RemStatement: s = "RemStatement"; break;
        case TokType::TypeSuffix: s = "TypeSuffix"; break;
        case TokType::TypedName: s = "TypedName"; break;
        case TokType::Whitespace: s = "Whitespace"; break;
        case TokType::Terminal0: s = "Terminal0"; break;
        case TokType::Terminal1: s = "Terminal1"; break;
        case TokType::Terminal10: s = "Terminal10"; break;
        case TokType::Terminal100: s = "Terminal100"; break;
        case TokType::Terminal101: s = "Terminal101"; break;
        case TokType::Terminal102: s = "Terminal102"; break;
        case TokType::Terminal103: s = "Terminal103"; break;
        case TokType::Terminal104: s = "Terminal104"; break;
        case TokType::Terminal105: s = "Terminal105"; break;
        case TokType::Terminal106: s = "Terminal106"; break;
        case TokType::Terminal107: s = "Terminal107"; break;
        case TokType::Terminal108: s = "Terminal108"; break;
        case TokType::Terminal109: s = "Terminal109"; break;
        case TokType::Terminal11: s = "Terminal11"; break;
        case TokType::Terminal110: s = "Terminal110"; break;
        case TokType::Terminal111: s = "Terminal111"; break;
        case TokType::Terminal112: s = "Terminal112"; break;
        case TokType::Terminal113: s = "Terminal113"; break;
        case TokType::Terminal114: s = "Terminal114"; break;
        case TokType::Terminal115: s = "Terminal115"; break;
        case TokType::Terminal116: s = "Terminal116"; break;
        case TokType::Terminal117: s = "Terminal117"; break;
        case TokType::Terminal118: s = "Terminal118"; break;
        case TokType::Terminal119: s = "Terminal119"; break;
        case TokType::Terminal12: s = "Terminal12"; break;
        case TokType::Terminal120: s = "Terminal120"; break;
        case TokType::Terminal121: s = "Terminal121"; break;
        case TokType::Terminal122: s = "Terminal122"; break;
        case TokType::Terminal123: s = "Terminal123"; break;
        case TokType::Terminal124: s = "Terminal124"; break;
        case TokType::Terminal125: s = "Terminal125"; break;
        case TokType::Terminal126: s = "Terminal126"; break;
        case TokType::Terminal127: s = "Terminal127"; break;
        case TokType::Terminal128: s = "Terminal128"; break;
        case TokType::Terminal129: s = "Terminal129"; break;
        case TokType::Terminal13: s = "Terminal13"; break;
        case TokType::Terminal130: s = "Terminal130"; break;
        case TokType::Terminal131: s = "Terminal131"; break;
        case TokType::Terminal132: s = "Terminal132"; break;
        case TokType::Terminal133: s = "Terminal133"; break;
        case TokType::Terminal134: s = "Terminal134"; break;
        case TokType::Terminal135: s = "Terminal135"; break;
        case TokType::Terminal136: s = "Terminal136"; break;
        case TokType::Terminal137: s = "Terminal137"; break;
        case TokType::Terminal138: s = "Terminal138"; break;
        case TokType::Terminal139: s = "Terminal139"; break;
        case TokType::Terminal14: s = "Terminal14"; break;
        case TokType::Terminal140: s = "Terminal140"; break;
        case TokType::Terminal141: s = "Terminal141"; break;
        case TokType::Terminal142: s = "Terminal142"; break;
        case TokType::Terminal143: s = "Terminal143"; break;
        case TokType::Terminal144: s = "Terminal144"; break;
        case TokType::Terminal145: s = "Terminal145"; break;
        case TokType::Terminal146: s = "Terminal146"; break;
        case TokType::Terminal147: s = "Terminal147"; break;
        case TokType::Terminal148: s = "Terminal148"; break;
        case TokType::Terminal149: s = "Terminal149"; break;
        case TokType::Terminal15: s = "Terminal15"; break;
        case TokType::Terminal150: s = "Terminal150"; break;
        case TokType::Terminal151: s = "Terminal151"; break;
        case TokType::Terminal152: s = "Terminal152"; break;
        case TokType::Terminal153: s = "Terminal153"; break;
        case TokType::Terminal154: s = "Terminal154"; break;
        case TokType::Terminal155: s = "Terminal155"; break;
        case TokType::Terminal156: s = "Terminal156"; break;
        case TokType::Terminal157: s = "Terminal157"; break;
        case TokType::Terminal158: s = "Terminal158"; break;
        case TokType::Terminal159: s = "Terminal159"; break;
        case TokType::Terminal16: s = "Terminal16"; break;
        case TokType::Terminal160: s = "Terminal160"; break;
        case TokType::Terminal161: s = "Terminal161"; break;
        case TokType::Terminal162: s = "Terminal162"; break;
        case TokType::Terminal163: s = "Terminal163"; break;
        case TokType::Terminal164: s = "Terminal164"; break;
        case TokType::Terminal165: s = "Terminal165"; break;
        case TokType::Terminal166: s = "Terminal166"; break;
        case TokType::Terminal167: s = "Terminal167"; break;
        case TokType::Terminal168: s = "Terminal168"; break;
        case TokType::Terminal169: s = "Terminal169"; break;
        case TokType::Terminal17: s = "Terminal17"; break;
        case TokType::Terminal170: s = "Terminal170"; break;
        case TokType::Terminal171: s = "Terminal171"; break;
        case TokType::Terminal172: s = "Terminal172"; break;
        case TokType::Terminal173: s = "Terminal173"; break;
        case TokType::Terminal174: s = "Terminal174"; break;
        case TokType::Terminal175: s = "Terminal175"; break;
        case TokType::Terminal176: s = "Terminal176"; break;
        case TokType::Terminal177: s = "Terminal177"; break;
        case TokType::Terminal178: s = "Terminal178"; break;
        case TokType::Terminal179: s = "Terminal179"; break;
        case TokType::Terminal18: s = "Terminal18"; break;
        case TokType::Terminal180: s = "Terminal180"; break;
        case TokType::Terminal181: s = "Terminal181"; break;
        case TokType::Terminal182: s = "Terminal182"; break;
        case TokType::Terminal183: s = "Terminal183"; break;
        case TokType::Terminal184: s = "Terminal184"; break;
        case TokType::Terminal185: s = "Terminal185"; break;
        case TokType::Terminal186: s = "Terminal186"; break;
        case TokType::Terminal187: s = "Terminal187"; break;
        case TokType::Terminal188: s = "Terminal188"; break;
        case TokType::Terminal189: s = "Terminal189"; break;
        case TokType::Terminal19: s = "Terminal19"; break;
        case TokType::Terminal190: s = "Terminal190"; break;
        case TokType::Terminal191: s = "Terminal191"; break;
        case TokType::Terminal192: s = "Terminal192"; break;
        case TokType::Terminal193: s = "Terminal193"; break;
        case TokType::Terminal194: s = "Terminal194"; break;
        case TokType::Terminal195: s = "Terminal195"; break;
        case TokType::Terminal196: s = "Terminal196"; break;
        case TokType::Terminal197: s = "Terminal197"; break;
        case TokType::Terminal198: s = "Terminal198"; break;
        case TokType::Terminal199: s = "Terminal199"; break;
        case TokType::Terminal2: s = "Terminal2"; break;
        case TokType::Terminal20: s = "Terminal20"; break;
        case TokType::Terminal200: s = "Terminal200"; break;
        case TokType::Terminal201: s = "Terminal201"; break;
        case TokType::Terminal202: s = "Terminal202"; break;
        case TokType::Terminal203: s = "Terminal203"; break;
        case TokType::Terminal204: s = "Terminal204"; break;
        case TokType::Terminal205: s = "Terminal205"; break;
        case TokType::Terminal206: s = "Terminal206"; break;
        case TokType::Terminal207: s = "Terminal207"; break;
        case TokType::Terminal208: s = "Terminal208"; break;
        case TokType::Terminal209: s = "Terminal209"; break;
        case TokType::Terminal21: s = "Terminal21"; break;
        case TokType::Terminal210: s = "Terminal210"; break;
        case TokType::Terminal211: s = "Terminal211"; break;
        case TokType::Terminal212: s = "Terminal212"; break;
        case TokType::Terminal213: s = "Terminal213"; break;
        case TokType::Terminal214: s = "Terminal214"; break;
        case TokType::Terminal215: s = "Terminal215"; break;
        case TokType::Terminal216: s = "Terminal216"; break;
        case TokType::Terminal217: s = "Terminal217"; break;
        case TokType::Terminal218: s = "Terminal218"; break;
        case TokType::Terminal219: s = "Terminal219"; break;
        case TokType::Terminal22: s = "Terminal22"; break;
        case TokType::Terminal220: s = "Terminal220"; break;
        case TokType::Terminal221: s = "Terminal221"; break;
        case TokType::Terminal222: s = "Terminal222"; break;
        case TokType::Terminal223: s = "Terminal223"; break;
        case TokType::Terminal224: s = "Terminal224"; break;
        case TokType::Terminal225: s = "Terminal225"; break;
        case TokType::Terminal226: s = "Terminal226"; break;
        case TokType::Terminal227: s = "Terminal227"; break;
        case TokType::Terminal228: s = "Terminal228"; break;
        case TokType::Terminal23: s = "Terminal23"; break;
        case TokType::Terminal24: s = "Terminal24"; break;
        case TokType::Terminal25: s = "Terminal25"; break;
        case TokType::Terminal26: s = "Terminal26"; break;
        case TokType::Terminal27: s = "Terminal27"; break;
        case TokType::Terminal28: s = "Terminal28"; break;
        case TokType::Terminal29: s = "Terminal29"; break;
        case TokType::Terminal3: s = "Terminal3"; break;
        case TokType::Terminal30: s = "Terminal30"; break;
        case TokType::Terminal31: s = "Terminal31"; break;
        case TokType::Terminal32: s = "Terminal32"; break;
        case TokType::Terminal33: s = "Terminal33"; break;
        case TokType::Terminal34: s = "Terminal34"; break;
        case TokType::Terminal35: s = "Terminal35"; break;
        case TokType::Terminal36: s = "Terminal36"; break;
        case TokType::Terminal37: s = "Terminal37"; break;
        case TokType::Terminal38: s = "Terminal38"; break;
        case TokType::Terminal39: s = "Terminal39"; break;
        case TokType::Terminal4: s = "Terminal4"; break;
        case TokType::Terminal40: s = "Terminal40"; break;
        case TokType::Terminal41: s = "Terminal41"; break;
        case TokType::Terminal42: s = "Terminal42"; break;
        case TokType::Terminal43: s = "Terminal43"; break;
        case TokType::Terminal44: s = "Terminal44"; break;
        case TokType::Terminal45: s = "Terminal45"; break;
        case TokType::Terminal46: s = "Terminal46"; break;
        case TokType::Terminal47: s = "Terminal47"; break;
        case TokType::Terminal48: s = "Terminal48"; break;
        case TokType::Terminal49: s = "Terminal49"; break;
        case TokType::Terminal5: s = "Terminal5"; break;
        case TokType::Terminal50: s = "Terminal50"; break;
        case TokType::Terminal51: s = "Terminal51"; break;
        case TokType::Terminal52: s = "Terminal52"; break;
        case TokType::Terminal53: s = "Terminal53"; break;
        case TokType::Terminal54: s = "Terminal54"; break;
        case TokType::Terminal55: s = "Terminal55"; break;
        case TokType::Terminal56: s = "Terminal56"; break;
        case TokType::Terminal57: s = "Terminal57"; break;
        case TokType::Terminal58: s = "Terminal58"; break;
        case TokType::Terminal59: s = "Terminal59"; break;
        case TokType::Terminal6: s = "Terminal6"; break;
        case TokType::Terminal60: s = "Terminal60"; break;
        case TokType::Terminal61: s = "Terminal61"; break;
        case TokType::Terminal62: s = "Terminal62"; break;
        case TokType::Terminal63: s = "Terminal63"; break;
        case TokType::Terminal64: s = "Terminal64"; break;
        case TokType::Terminal65: s = "Terminal65"; break;
        case TokType::Terminal66: s = "Terminal66"; break;
        case TokType::Terminal67: s = "Terminal67"; break;
        case TokType::Terminal68: s = "Terminal68"; break;
        case TokType::Terminal69: s = "Terminal69"; break;
        case TokType::Terminal7: s = "Terminal7"; break;
        case TokType::Terminal70: s = "Terminal70"; break;
        case TokType::Terminal71: s = "Terminal71"; break;
        case TokType::Terminal72: s = "Terminal72"; break;
        case TokType::Terminal73: s = "Terminal73"; break;
        case TokType::Terminal74: s = "Terminal74"; break;
        case TokType::Terminal75: s = "Terminal75"; break;
        case TokType::Terminal76: s = "Terminal76"; break;
        case TokType::Terminal77: s = "Terminal77"; break;
        case TokType::Terminal78: s = "Terminal78"; break;
        case TokType::Terminal79: s = "Terminal79"; break;
        case TokType::Terminal8: s = "Terminal8"; break;
        case TokType::Terminal80: s = "Terminal80"; break;
        case TokType::Terminal81: s = "Terminal81"; break;
        case TokType::Terminal82: s = "Terminal82"; break;
        case TokType::Terminal83: s = "Terminal83"; break;
        case TokType::Terminal84: s = "Terminal84"; break;
        case TokType::Terminal85: s = "Terminal85"; break;
        case TokType::Terminal86: s = "Terminal86"; break;
        case TokType::Terminal87: s = "Terminal87"; break;
        case TokType::Terminal88: s = "Terminal88"; break;
        case TokType::Terminal89: s = "Terminal89"; break;
        case TokType::Terminal9: s = "Terminal9"; break;
        case TokType::Terminal90: s = "Terminal90"; break;
        case TokType::Terminal91: s = "Terminal91"; break;
        case TokType::Terminal92: s = "Terminal92"; break;
        case TokType::Terminal93: s = "Terminal93"; break;
        case TokType::Terminal94: s = "Terminal94"; break;
        case TokType::Terminal95: s = "Terminal95"; break;
        case TokType::Terminal96: s = "Terminal96"; break;
        case TokType::Terminal97: s = "Terminal97"; break;
        case TokType::Terminal98: s = "Terminal98"; break;
        case TokType::Terminal99: s = "Terminal99"; break;
        }
        return std::format_to(fc.out(), "{}", s);

    }
};
export array lexRules =
{
    pair<string, TokType>{ "(('))((((([^\r\n])))*))", TokType::Comment },
    pair<string, TokType>{ "(((((((((\t))|(( )))))(((((\t))|(( )))))*)))?)((((('))((((([^\r\n])))*))))?)((\r\n)|(\r)|(\n))", TokType::CommentEndOfLine },
    pair<string, TokType>{ "((((((((0-7))|(8)|(9))(((0-7))|(8)|(9))*))|((((J|j)(A|a)(N|n)(U|u)(A|a)(R|r)(Y|y))|((F|f)(E|e)(B|b)(R|r)(U|u)(A|a)(R|r)(Y|y))|((M|m)(A|a)(R|r)(C|c)(H|h))|((A|a)(P|p)(R|r)(I|i)(L|l))|((M|m)(A|a)(Y|y))|((J|j)(U|u)(N|n)(E|e))|((J|j)(U|u)(L|l)(Y|y))|((A|a)(U|u)(G|g)(U|u)(S|s)(T|t))|((S|s)(E|e)(P|p)(T|t)(E|e)(M|m)(B|b)(E|e)(R|r))|((O|o)(C|c)(T|t)(O|o)(B|b)(E|e)(R|r))|((N|n)(O|o)(V|v)(E|e)(M|m)(B|b)(E|e)(R|r))|((D|d)(E|e)(C|c)(E|e)(M|m)(B|b)(E|e)(R|r)))|(((J|j)(A|a)(N|n))|((F|f)(E|e)(B|b))|((M|m)(A|a)(R|r))|((A|a)(P|p)(R|r))|((J|j)(U|u)(N|n))|((J|j)(U|u)(L|l))|((A|a)(U|u)(G|g))|((S|s)(E|e)(P|p))|((O|o)(C|c)(T|t))|((N|n)(O|o)(V|v))|((D|d)(E|e)(C|c)))))((((((\t))|(( ))))((((\t))|(( ))))*)|((((((\t))|(( ))))*)((/)|(\\-)|(,))(((((\t))|(( ))))*)))((((((0-7))|(8)|(9))(((0-7))|(8)|(9))*))|((((J|j)(A|a)(N|n)(U|u)(A|a)(R|r)(Y|y))|((F|f)(E|e)(B|b)(R|r)(U|u)(A|a)(R|r)(Y|y))|((M|m)(A|a)(R|r)(C|c)(H|h))|((A|a)(P|p)(R|r)(I|i)(L|l))|((M|m)(A|a)(Y|y))|((J|j)(U|u)(N|n)(E|e))|((J|j)(U|u)(L|l)(Y|y))|((A|a)(U|u)(G|g)(U|u)(S|s)(T|t))|((S|s)(E|e)(P|p)(T|t)(E|e)(M|m)(B|b)(E|e)(R|r))|((O|o)(C|c)(T|t)(O|o)(B|b)(E|e)(R|r))|((N|n)(O|o)(V|v)(E|e)(M|m)(B|b)(E|e)(R|r))|((D|d)(E|e)(C|c)(E|e)(M|m)(B|b)(E|e)(R|r)))|(((J|j)(A|a)(N|n))|((F|f)(E|e)(B|b))|((M|m)(A|a)(R|r))|((A|a)(P|p)(R|r))|((J|j)(U|u)(N|n))|((J|j)(U|u)(L|l))|((A|a)(U|u)(G|g))|((S|s)(E|e)(P|p))|((O|o)(C|c)(T|t))|((N|n)(O|o)(V|v))|((D|d)(E|e)(C|c)))))((((((((\t))|(( ))))((((\t))|(( ))))*)|((((((\t))|(( ))))*)((/)|(\\-)|(,))(((((\t))|(( ))))*)))((((((0-7))|(8)|(9))(((0-7))|(8)|(9))*))|((((J|j)(A|a)(N|n)(U|u)(A|a)(R|r)(Y|y))|((F|f)(E|e)(B|b)(R|r)(U|u)(A|a)(R|r)(Y|y))|((M|m)(A|a)(R|r)(C|c)(H|h))|((A|a)(P|p)(R|r)(I|i)(L|l))|((M|m)(A|a)(Y|y))|((J|j)(U|u)(N|n)(E|e))|((J|j)(U|u)(L|l)(Y|y))|((A|a)(U|u)(G|g)(U|u)(S|s)(T|t))|((S|s)(E|e)(P|p)(T|t)(E|e)(M|m)(B|b)(E|e)(R|r))|((O|o)(C|c)(T|t)(O|o)(B|b)(E|e)(R|r))|((N|n)(O|o)(V|v)(E|e)(M|m)(B|b)(E|e)(R|r))|((D|d)(E|e)(C|c)(E|e)(M|m)(B|b)(E|e)(R|r)))|(((J|j)(A|a)(N|n))|((F|f)(E|e)(B|b))|((M|m)(A|a)(R|r))|((A|a)(P|p)(R|r))|((J|j)(U|u)(N|n))|((J|j)(U|u)(L|l))|((A|a)(U|u)(G|g))|((S|s)(E|e)(P|p))|((O|o)(C|c)(T|t))|((N|n)(O|o)(V|v))|((D|d)(E|e)(C|c))))))?))(((((\t))|(( ))))((((\t))|(( ))))*)((((((((0-7))|(8)|(9))(((0-7))|(8)|(9))*)))((((((\t))|(( ))))*)(((A|a)(M|m))|((P|p)(M|m))|((A|a))|((P|p)))))|(((((((0-7))|(8)|(9))(((0-7))|(8)|(9))*)))((((((\t))|(( ))))*)((:)|(.))(((((\t))|(( ))))*))((((((0-7))|(8)|(9))(((0-7))|(8)|(9))*)))((((((((\t))|(( ))))*)((:)|(.))(((((\t))|(( ))))*))((((((0-7))|(8)|(9))(((0-7))|(8)|(9))*))))?)((((((((\t))|(( ))))*)(((A|a)(M|m))|((P|p)(M|m))|((A|a))|((P|p)))))?))))|(((((((0-7))|(8)|(9))(((0-7))|(8)|(9))*))|((((J|j)(A|a)(N|n)(U|u)(A|a)(R|r)(Y|y))|((F|f)(E|e)(B|b)(R|r)(U|u)(A|a)(R|r)(Y|y))|((M|m)(A|a)(R|r)(C|c)(H|h))|((A|a)(P|p)(R|r)(I|i)(L|l))|((M|m)(A|a)(Y|y))|((J|j)(U|u)(N|n)(E|e))|((J|j)(U|u)(L|l)(Y|y))|((A|a)(U|u)(G|g)(U|u)(S|s)(T|t))|((S|s)(E|e)(P|p)(T|t)(E|e)(M|m)(B|b)(E|e)(R|r))|((O|o)(C|c)(T|t)(O|o)(B|b)(E|e)(R|r))|((N|n)(O|o)(V|v)(E|e)(M|m)(B|b)(E|e)(R|r))|((D|d)(E|e)(C|c)(E|e)(M|m)(B|b)(E|e)(R|r)))|(((J|j)(A|a)(N|n))|((F|f)(E|e)(B|b))|((M|m)(A|a)(R|r))|((A|a)(P|p)(R|r))|((J|j)(U|u)(N|n))|((J|j)(U|u)(L|l))|((A|a)(U|u)(G|g))|((S|s)(E|e)(P|p))|((O|o)(C|c)(T|t))|((N|n)(O|o)(V|v))|((D|d)(E|e)(C|c)))))((((((\t))|(( ))))((((\t))|(( ))))*)|((((((\t))|(( ))))*)((/)|(\\-)|(,))(((((\t))|(( ))))*)))((((((0-7))|(8)|(9))(((0-7))|(8)|(9))*))|((((J|j)(A|a)(N|n)(U|u)(A|a)(R|r)(Y|y))|((F|f)(E|e)(B|b)(R|r)(U|u)(A|a)(R|r)(Y|y))|((M|m)(A|a)(R|r)(C|c)(H|h))|((A|a)(P|p)(R|r)(I|i)(L|l))|((M|m)(A|a)(Y|y))|((J|j)(U|u)(N|n)(E|e))|((J|j)(U|u)(L|l)(Y|y))|((A|a)(U|u)(G|g)(U|u)(S|s)(T|t))|((S|s)(E|e)(P|p)(T|t)(E|e)(M|m)(B|b)(E|e)(R|r))|((O|o)(C|c)(T|t)(O|o)(B|b)(E|e)(R|r))|((N|n)(O|o)(V|v)(E|e)(M|m)(B|b)(E|e)(R|r))|((D|d)(E|e)(C|c)(E|e)(M|m)(B|b)(E|e)(R|r)))|(((J|j)(A|a)(N|n))|((F|f)(E|e)(B|b))|((M|m)(A|a)(R|r))|((A|a)(P|p)(R|r))|((J|j)(U|u)(N|n))|((J|j)(U|u)(L|l))|((A|a)(U|u)(G|g))|((S|s)(E|e)(P|p))|((O|o)(C|c)(T|t))|((N|n)(O|o)(V|v))|((D|d)(E|e)(C|c)))))((((((((\t))|(( ))))((((\t))|(( ))))*)|((((((\t))|(( ))))*)((/)|(\\-)|(,))(((((\t))|(( ))))*)))((((((0-7))|(8)|(9))(((0-7))|(8)|(9))*))|((((J|j)(A|a)(N|n)(U|u)(A|a)(R|r)(Y|y))|((F|f)(E|e)(B|b)(R|r)(U|u)(A|a)(R|r)(Y|y))|((M|m)(A|a)(R|r)(C|c)(H|h))|((A|a)(P|p)(R|r)(I|i)(L|l))|((M|m)(A|a)(Y|y))|((J|j)(U|u)(N|n)(E|e))|((J|j)(U|u)(L|l)(Y|y))|((A|a)(U|u)(G|g)(U|u)(S|s)(T|t))|((S|s)(E|e)(P|p)(T|t)(E|e)(M|m)(B|b)(E|e)(R|r))|((O|o)(C|c)(T|t)(O|o)(B|b)(E|e)(R|r))|((N|n)(O|o)(V|v)(E|e)(M|m)(B|b)(E|e)(R|r))|((D|d)(E|e)(C|c)(E|e)(M|m)(B|b)(E|e)(R|r)))|(((J|j)(A|a)(N|n))|((F|f)(E|e)(B|b))|((M|m)(A|a)(R|r))|((A|a)(P|p)(R|r))|((J|j)(U|u)(N|n))|((J|j)(U|u)(L|l))|((A|a)(U|u)(G|g))|((S|s)(E|e)(P|p))|((O|o)(C|c)(T|t))|((N|n)(O|o)(V|v))|((D|d)(E|e)(C|c))))))?))|((((((((0-7))|(8)|(9))(((0-7))|(8)|(9))*)))((((((\t))|(( ))))*)(((A|a)(M|m))|((P|p)(M|m))|((A|a))|((P|p)))))|(((((((0-7))|(8)|(9))(((0-7))|(8)|(9))*)))((((((\t))|(( ))))*)((:)|(.))(((((\t))|(( ))))*))((((((0-7))|(8)|(9))(((0-7))|(8)|(9))*)))((((((((\t))|(( ))))*)((:)|(.))(((((\t))|(( ))))*))((((((0-7))|(8)|(9))(((0-7))|(8)|(9))*))))?)((((((((\t))|(( ))))*)(((A|a)(M|m))|((P|p)(M|m))|((A|a))|((P|p)))))?)))", TokType::DateOrTime },
    pair<string, TokType>{ "(((((((((0-7))|(8)|(9))(((0-7))|(8)|(9))*)))((((D|d))|((E|e))|((D|d))|((E|e)))((((\\+)|(\\-)))?)(((((0-7))|(8)|(9))(((0-7))|(8)|(9))*))))|(((((((0-7))|(8)|(9))(((0-7))|(8)|(9))*)))(.)((((((((0-7))|(8)|(9))(((0-7))|(8)|(9))*))))?)((((((D|d))|((E|e))|((D|d))|((E|e)))((((\\+)|(\\-)))?)(((((0-7))|(8)|(9))(((0-7))|(8)|(9))*))))?))|((.)((((((0-7))|(8)|(9))(((0-7))|(8)|(9))*)))((((((D|d))|((E|e))|((D|d))|((E|e)))((((\\+)|(\\-)))?)(((((0-7))|(8)|(9))(((0-7))|(8)|(9))*))))?)))((((!)|(#)|(@)))?))|((((((0-7))|(8)|(9))(((0-7))|(8)|(9))*))((!)|(#)|(@)))", TokType::Float },
    pair<string, TokType>{ "(\\[)(((([^\r\n]))(([^\r\n]))*))(\\])", TokType::ForeignName },
    pair<string, TokType>{ "([a-zA-Z][a-zA-Z0-9_\\-]*)", TokType::Identifier },
    pair<string, TokType>{ "((((((0-7))|(8)|(9))(((0-7))|(8)|(9))*))|((&)((((O|o))|((O|o)))?)(((0-7))((0-7))*))|((&)((((H|h))|((H|h)))?)(((((0-7))|(8)|(9))|(A-F)|(a-f))((((0-7))|(8)|(9))|(A-F)|(a-f))*)))(((%)|(&)|(\\^))?)", TokType::Integer },
    pair<string, TokType>{ "(((((((\t))|(( )))))(((((\t))|(( )))))*))((_))(((((((((\t))|(( )))))(((((\t))|(( )))))*)))?)((\r\n)|(\r)|(\n))", TokType::LineContinuation },
    pair<string, TokType>{ "((\"))((((((\"))((\")))|(([^\r\n]))))*)(((\"))|((((((((\t))|(( )))))(((((\t))|(( )))))*))((_))(((((((((\t))|(( )))))(((((\t))|(( )))))*)))?)((\r\n)|(\r)|(\n)))|((\r\n)|(\r)|(\n)))", TokType::NormalString },
    pair<string, TokType>{ "((\"))(([a-zA-Z][a-zA-Z0-9_\\-]*))((\"))", TokType::QuotedIdentifier },
    pair<string, TokType>{ "((R|r)(E|e)(M|m))((((\t))|(( ))))((((([^\r\n])))*))", TokType::RemStatement },
    pair<string, TokType>{ "(%)|(&)|(\\^)|(!)|(#)|(@)|($)", TokType::TypeSuffix },
    pair<string, TokType>{ "(([a-zA-Z][a-zA-Z0-9_\\-]*))((%)|(&)|(\\^)|(!)|(#)|(@)|($))", TokType::TypedName },
    pair<string, TokType>{ "((((((\t))|(( )))))(((((\t))|(( )))))*)", TokType::Whitespace },
    pair<string, TokType>{ ":", TokType::Terminal0 },
    pair<string, TokType>{ "\\[", TokType::Terminal1 },
    pair<string, TokType>{ "(I|i)(N|n)(T|t)(E|e)(G|g)(E|e)(R|r)", TokType::Terminal10 },
    pair<string, TokType>{ "(S|s)(T|t)(A|a)(T|t)(I|i)(C|c)", TokType::Terminal100 },
    pair<string, TokType>{ "(S|s)(T|t)(O|o)(P|p)", TokType::Terminal101 },
    pair<string, TokType>{ "(S|s)(U|u)(B|b)", TokType::Terminal102 },
    pair<string, TokType>{ "(T|t)(Y|y)(P|p)(E|e)", TokType::Terminal103 },
    pair<string, TokType>{ "(U|u)(N|n)(L|l)(O|o)(C|c)(K|k)", TokType::Terminal104 },
    pair<string, TokType>{ "(W|w)(E|e)(N|n)(D|d)", TokType::Terminal105 },
    pair<string, TokType>{ "(W|w)(H|h)(I|i)(L|l)(E|e)", TokType::Terminal106 },
    pair<string, TokType>{ "(W|w)(I|i)(T|t)(H|h)", TokType::Terminal107 },
    pair<string, TokType>{ "(W|w)(R|r)(I|i)(T|t)(E|e)", TokType::Terminal108 },
    pair<string, TokType>{ "(R|r)(E|e)(M|m)", TokType::Terminal109 },
    pair<string, TokType>{ "(L|l)(O|o)(N|n)(G|g)", TokType::Terminal11 },
    pair<string, TokType>{ "(A|a)(N|n)(Y|y)", TokType::Terminal110 },
    pair<string, TokType>{ "(A|a)(S|s)", TokType::Terminal111 },
    pair<string, TokType>{ "(B|b)(Y|y)(R|r)(E|e)(F|f)", TokType::Terminal112 },
    pair<string, TokType>{ "(B|b)(Y|y)(V|v)(A|a)(L|l) ", TokType::Terminal113 },
    pair<string, TokType>{ "(E|e)(A|a)(C|c)(H|h)", TokType::Terminal114 },
    pair<string, TokType>{ "(I|i)(N|n)", TokType::Terminal115 },
    pair<string, TokType>{ "(N|n)(E|e)(W|w)", TokType::Terminal116 },
    pair<string, TokType>{ "(S|s)(H|h)(A|a)(R|r)(E|e)(D|d)", TokType::Terminal117 },
    pair<string, TokType>{ "(U|u)(N|n)(T|t)(I|i)(L|l)", TokType::Terminal118 },
    pair<string, TokType>{ "(W|w)(I|i)(T|t)(H|h)(E|e)(V|v)(E|e)(N|n)(T|t)(S|s)", TokType::Terminal119 },
    pair<string, TokType>{ "(L|l)(O|o)(N|n)(G|g)(L|l)(O|o)(N|n)(G|g)", TokType::Terminal12 },
    pair<string, TokType>{ "(O|o)(P|p)(T|t)(I|i)(O|o)(N|n)(A|a)(L|l)", TokType::Terminal120 },
    pair<string, TokType>{ "(P|p)(A|a)(R|r)(A|a)(M|m)(A|a)(R|r)(R|r)(A|a)(Y|y)", TokType::Terminal121 },
    pair<string, TokType>{ "(P|p)(R|r)(E|e)(S|s)(E|e)(R|r)(V|v)(E|e)", TokType::Terminal122 },
    pair<string, TokType>{ "(S|s)(P|p)(C|c)", TokType::Terminal123 },
    pair<string, TokType>{ "(T|t)(A|a)(B|b)", TokType::Terminal124 },
    pair<string, TokType>{ "(T|t)(H|h)(E|e)(N|n)", TokType::Terminal125 },
    pair<string, TokType>{ "(T|t)(O|o)", TokType::Terminal126 },
    pair<string, TokType>{ "(A|a)(D|d)(D|d)(R|r)(E|e)(S|s)(S|s)(O|o)(F|f)", TokType::Terminal127 },
    pair<string, TokType>{ "(A|a)(N|n)(D|d)", TokType::Terminal128 },
    pair<string, TokType>{ "(E|e)(Q|q)(V|v)", TokType::Terminal129 },
    pair<string, TokType>{ "(L|l)(O|o)(N|n)(G|g)(P|p)(T|t)(R|r)", TokType::Terminal13 },
    pair<string, TokType>{ "(I|i)(M|m)(P|p)", TokType::Terminal130 },
    pair<string, TokType>{ "(I|i)(S|s)", TokType::Terminal131 },
    pair<string, TokType>{ "(L|l)(I|i)(K|k)(E|e)", TokType::Terminal132 },
    pair<string, TokType>{ "(M|m)(O|o)(D|d)", TokType::Terminal133 },
    pair<string, TokType>{ "(N|n)(O|o)(T|t)", TokType::Terminal134 },
    pair<string, TokType>{ "(O|o)(R|r)", TokType::Terminal135 },
    pair<string, TokType>{ "(T|t)(Y|y)(P|p)(E|e)(O|o)(F|f)", TokType::Terminal136 },
    pair<string, TokType>{ "(X|x)(O|o)(R|r)", TokType::Terminal137 },
    pair<string, TokType>{ "(A|a)(R|r)(R|r)(A|a)(Y|y)", TokType::Terminal138 },
    pair<string, TokType>{ "(C|c)(I|i)(R|r)(C|c)(L|l)(E|e)", TokType::Terminal139 },
    pair<string, TokType>{ "(S|s)(I|i)(N|n)(G|g)(L|l)(E|e)", TokType::Terminal14 },
    pair<string, TokType>{ "(I|i)(N|n)(P|p)(U|u)(T|t)(B|b)", TokType::Terminal140 },
    pair<string, TokType>{ "(L|l)(B|b)(O|o)(U|u)(N|n)(D|d)", TokType::Terminal141 },
    pair<string, TokType>{ "(U|u)(B|b)(O|o)(U|u)(N|n)(D|d)", TokType::Terminal142 },
    pair<string, TokType>{ "(T|t)(R|r)(U|u)(E|e)", TokType::Terminal143 },
    pair<string, TokType>{ "(F|f)(A|a)(L|l)(S|s)(E|e)", TokType::Terminal144 },
    pair<string, TokType>{ "(N|n)(O|o)(T|t)(H|h)(I|i)(N|n)(G|g)", TokType::Terminal145 },
    pair<string, TokType>{ "(E|e)(M|m)(P|p)(T|t)(Y|y)", TokType::Terminal146 },
    pair<string, TokType>{ "(N|n)(U|u)(L|l)(L|l)", TokType::Terminal147 },
    pair<string, TokType>{ "(A|a)(T|t)(T|t)(R|r)(I|i)(B|b)(U|u)(T|t)(E|e)", TokType::Terminal148 },
    pair<string, TokType>{ "(L|l)(I|i)(N|n)(E|e)(I|i)(N|n)(P|p)(U|u)(T|t)", TokType::Terminal149 },
    pair<string, TokType>{ "(S|s)(T|t)(R|r)(I|i)(N|n)(G|g)", TokType::Terminal15 },
    pair<string, TokType>{ "(V|v)(B|b)_(B|b)(A|a)(S|s)(E|e)", TokType::Terminal150 },
    pair<string, TokType>{ "(V|v)(B|b)_(C|c)(O|o)(N|n)(T|t)(R|r)(O|o)(L|l)", TokType::Terminal151 },
    pair<string, TokType>{ "(V|v)(B|b)_(C|c)(R|r)(E|e)(A|a)(T|t)(A|a)(B|b)(L|l)(E|e)", TokType::Terminal152 },
    pair<string, TokType>{ "(V|v)(B|b)_(C|c)(U|u)(S|s)(T|t)(O|o)(M|m)(I|i)(Z|z)(A|a)(B|b)(L|l)(E|e)", TokType::Terminal153 },
    pair<string, TokType>{ "(V|v)(B|b)_(D|d)(E|e)(S|s)(C|c)(R|r)(I|i)(P|p)(T|t)(I|i)(O|o)(N|n)", TokType::Terminal154 },
    pair<string, TokType>{ "(V|v)(B|b)_(E|e)(X|x)(P|p)(O|o)(S|s)(E|e)(D|d)", TokType::Terminal155 },
    pair<string, TokType>{ "(V|v)(B|b)_(E|e)(X|x)(T|t)_(K|k)(E|e)(Y|y) ", TokType::Terminal156 },
    pair<string, TokType>{ "(V|v)(B|b)_(G|g)(L|l)(O|o)(B|b)(A|a)(L|l)(N|n)(A|a)(M|m)(E|e)(S|s)(P|p)(A|a)(C|c)(E|e)", TokType::Terminal157 },
    pair<string, TokType>{ "(V|v)(B|b)_(H|h)(E|e)(L|l)(P|p)(I|i)(D|d)", TokType::Terminal158 },
    pair<string, TokType>{ "(V|v)(B|b)_(I|i)(N|n)(V|v)(O|o)(K|k)(E|e)_(F|f)(U|u)(N|n)(C|c)", TokType::Terminal159 },
    pair<string, TokType>{ "(V|v)(A|a)(R|r)(I|i)(A|a)(N|n)(T|t)", TokType::Terminal16 },
    pair<string, TokType>{ "(V|v)(B|b)_(I|i)(N|n)(V|v)(O|o)(K|k)(E|e)_(P|p)(R|r)(O|o)(P|p)(E|e)(R|r)(T|t)(Y|y) ", TokType::Terminal160 },
    pair<string, TokType>{ "(V|v)(B|b)_(I|i)(N|n)(V|v)(O|o)(K|k)(E|e)_(P|p)(R|r)(O|o)(P|p)(E|e)(R|r)(T|t)(Y|y)(P|p)(U|u)(T|t)", TokType::Terminal161 },
    pair<string, TokType>{ "(V|v)(B|b)_(I|i)(N|n)(V|v)(O|o)(K|k)(E|e)_(P|p)(R|r)(O|o)(P|p)(E|e)(R|r)(T|t)(Y|y)(P|p)(U|u)(T|t)(R|r)(E|e)(F|f)", TokType::Terminal162 },
    pair<string, TokType>{ "(V|v)(B|b)_(M|m)(E|e)(M|m)(B|b)(E|e)(R|r)(F|f)(L|l)(A|a)(G|g)(S|s)", TokType::Terminal163 },
    pair<string, TokType>{ "(V|v)(B|b)_(N|n)(A|a)(M|m)(E|e)", TokType::Terminal164 },
    pair<string, TokType>{ "(V|v)(B|b)_(P|p)(R|r)(E|e)(D|d)(E|e)(C|c)(L|l)(A|a)(R|r)(E|e)(D|d)(I|i)(D|d)", TokType::Terminal165 },
    pair<string, TokType>{ "(V|v)(B|b)_(P|p)(R|r)(O|o)(C|c)(D|d)(A|a)(T|t)(A|a)", TokType::Terminal166 },
    pair<string, TokType>{ "(V|v)(B|b)_(T|t)(E|e)(M|m)(P|p)(L|l)(A|a)(T|t)(E|e)(D|d)(E|e)(R|r)(I|i)(V|v)(E|e)(D|d)", TokType::Terminal167 },
    pair<string, TokType>{ "(V|v)(B|b)_(U|u)(S|s)(E|e)(R|r)(M|m)(E|e)(M|m)(I|i)(D|d)", TokType::Terminal168 },
    pair<string, TokType>{ "(V|v)(B|b)_(V|v)(A|a)(R|r)(D|d)(E|e)(S|s)(C|c)(R|r)(I|i)(P|p)(T|t)(I|i)(O|o)(N|n)", TokType::Terminal169 },
    pair<string, TokType>{ "(A|a)(B|b)(S|s)", TokType::Terminal17 },
    pair<string, TokType>{ "(V|v)(B|b)_(V|v)(A|a)(R|r)(H|h)(E|e)(L|l)(P|p)(I|i)(D|d)", TokType::Terminal170 },
    pair<string, TokType>{ "(V|v)(B|b)_(V|v)(A|a)(R|r)(M|m)(E|e)(M|m)(B|b)(E|e)(R|r)(F|f)(L|l)(A|a)(G|g)(S|s)", TokType::Terminal171 },
    pair<string, TokType>{ "(V|v)(B|b)_(V|v)(A|a)(R|r)(P|p)(R|r)(O|o)(C|c)(D|d)(A|a)(T|t)(A|a) ", TokType::Terminal172 },
    pair<string, TokType>{ "(V|v)(B|b)_(V|v)(A|a)(R|r)(U|u)(S|s)(E|e)(R|r)(M|m)(E|e)(M|m)(I|i)(D|d)", TokType::Terminal173 },
    pair<string, TokType>{ "(C|c)(D|d)(E|e)(C|c)(L|l)", TokType::Terminal174 },
    pair<string, TokType>{ "(D|d)(E|e)(C|c)(I|i)(M|m)(A|a)(L|l)", TokType::Terminal175 },
    pair<string, TokType>{ "(D|d)(E|e)(F|f)(D|d)(E|e)(C|c)", TokType::Terminal176 },
    pair<string, TokType>{ "\\->", TokType::Terminal177 },
    pair<string, TokType>{ "(C|c)(O|o)(M|m)(P|p)(A|a)(R|r)(E|e)", TokType::Terminal178 },
    pair<string, TokType>{ "(B|b)(I|i)(N|n)(A|a)(R|r)(Y|y)", TokType::Terminal179 },
    pair<string, TokType>{ "(C|c)(B|b)(O|o)(O|o)(L|l)", TokType::Terminal18 },
    pair<string, TokType>{ "(T|t)(E|e)(X|x)(T|t)", TokType::Terminal180 },
    pair<string, TokType>{ "(B|b)(A|a)(S|s)(E|e)", TokType::Terminal181 },
    pair<string, TokType>{ "(E|e)(X|x)(P|p)(L|l)(I|i)(C|c)(I|i)(T|t)", TokType::Terminal182 },
    pair<string, TokType>{ "(M|m)(O|o)(D|d)(U|u)(L|l)(E|e)", TokType::Terminal183 },
    pair<string, TokType>{ ",", TokType::Terminal184 },
    pair<string, TokType>{ "\\-", TokType::Terminal185 },
    pair<string, TokType>{ "\\(", TokType::Terminal186 },
    pair<string, TokType>{ "\\)", TokType::Terminal187 },
    pair<string, TokType>{ "\\*", TokType::Terminal188 },
    pair<string, TokType>{ "=", TokType::Terminal189 },
    pair<string, TokType>{ "(C|c)(B|b)(Y|y)(T|t)(E|e)", TokType::Terminal19 },
    pair<string, TokType>{ "(P|p)(T|t)(R|r)(S|s)(A|a)(F|f)(E|e)", TokType::Terminal190 },
    pair<string, TokType>{ "(L|l)(I|i)(B|b)", TokType::Terminal191 },
    pair<string, TokType>{ "(A|a)(L|l)(I|i)(A|a)(S|s)", TokType::Terminal192 },
    pair<string, TokType>{ "(P|p)(R|r)(O|o)(P|p)(E|e)(R|r)(T|t)(Y|y)", TokType::Terminal193 },
    pair<string, TokType>{ "\\[(V|v)(A|a)(R|r)(I|i)(A|a)(N|n)(T|t)\\]", TokType::Terminal194 },
    pair<string, TokType>{ "(B|b)(Y|y)(V|v)(A|a)(L|l)", TokType::Terminal195 },
    pair<string, TokType>{ "(C|c)(L|l)(A|a)(S|s)(S|s)_(I|i)(N|n)(I|i)(T|t)(I|i)(A|a)(L|l)(I|i)(Z|z)(E|e)", TokType::Terminal196 },
    pair<string, TokType>{ "(C|c)(L|l)(A|a)(S|s)(S|s)_(T|t)(E|e)(R|r)(M|m)(I|i)(N|n)(A|a)(T|t)(E|e)", TokType::Terminal197 },
    pair<string, TokType>{ ".", TokType::Terminal198 },
    pair<string, TokType>{ "(S|s)(T|t)(E|e)(P|p)", TokType::Terminal199 },
    pair<string, TokType>{ "\\]", TokType::Terminal2 },
    pair<string, TokType>{ "(C|c)(C|c)(U|u)(R|r)", TokType::Terminal20 },
    pair<string, TokType>{ "<", TokType::Terminal200 },
    pair<string, TokType>{ ">", TokType::Terminal201 },
    pair<string, TokType>{ "(G|g)(O|o)", TokType::Terminal202 },
    pair<string, TokType>{ "(A|a)(S|s)(S|s)(E|e)(R|r)(T|t)", TokType::Terminal203 },
    pair<string, TokType>{ "(M|m)(I|i)(D|d)", TokType::Terminal204 },
    pair<string, TokType>{ "(M|m)(I|i)(D|d)(B|b)", TokType::Terminal205 },
    pair<string, TokType>{ "(M|m)(I|i)(D|d)$", TokType::Terminal206 },
    pair<string, TokType>{ "(M|m)(I|i)(D|d)(B|b)$", TokType::Terminal207 },
    pair<string, TokType>{ "(E|e)(R|r)(R|r)(O|o)(R|r)", TokType::Terminal208 },
    pair<string, TokType>{ "0", TokType::Terminal209 },
    pair<string, TokType>{ "(C|c)(D|d)(A|a)(T|t)(E|e)", TokType::Terminal21 },
    pair<string, TokType>{ "(A|a)(P|p)(P|p)(E|e)(N|n)(D|d)", TokType::Terminal210 },
    pair<string, TokType>{ "(O|o)(U|u)(T|t)(P|p)(U|u)(T|t)", TokType::Terminal211 },
    pair<string, TokType>{ "(R|r)(A|a)(N|n)(D|d)(O|o)(M|m)", TokType::Terminal212 },
    pair<string, TokType>{ "(A|a)(C|c)(C|c)(E|e)(S|s)(S|s)", TokType::Terminal213 },
    pair<string, TokType>{ "(R|r)(E|e)(A|a)(D|d)", TokType::Terminal214 },
    pair<string, TokType>{ "#", TokType::Terminal215 },
    pair<string, TokType>{ "(R|r)(E|e)(S|s)(E|e)(T|t)", TokType::Terminal216 },
    pair<string, TokType>{ "(L|l)(I|i)(N|n)(E|e)", TokType::Terminal217 },
    pair<string, TokType>{ "(W|w)(I|i)(D|d)(T|t)(H|h)", TokType::Terminal218 },
    pair<string, TokType>{ ";", TokType::Terminal219 },
    pair<string, TokType>{ "(C|c)(D|d)(B|b)(L|l)", TokType::Terminal22 },
    pair<string, TokType>{ "\\+", TokType::Terminal220 },
    pair<string, TokType>{ "/", TokType::Terminal221 },
    pair<string, TokType>{ "\\\\", TokType::Terminal222 },
    pair<string, TokType>{ "\\^", TokType::Terminal223 },
    pair<string, TokType>{ "&", TokType::Terminal224 },
    pair<string, TokType>{ "\\?", TokType::Terminal225 },
    pair<string, TokType>{ "[^\\?#\\*\\[]", TokType::Terminal226 },
    pair<string, TokType>{ "!", TokType::Terminal227 },
    pair<string, TokType>{ "[^\\-\\]]", TokType::Terminal228 },
    pair<string, TokType>{ "(C|c)(D|d)(E|e)(C|c)", TokType::Terminal23 },
    pair<string, TokType>{ "(C|c)(I|i)(N|n)(T|t)", TokType::Terminal24 },
    pair<string, TokType>{ "(C|c)(L|l)(N|n)(G|g)", TokType::Terminal25 },
    pair<string, TokType>{ "(C|c)(L|l)(N|n)(G|g)(L|l)(N|n)(G|g)", TokType::Terminal26 },
    pair<string, TokType>{ "(C|c)(L|l)(N|n)(G|g)(P|p)(T|t)(R|r)", TokType::Terminal27 },
    pair<string, TokType>{ "(C|c)(S|s)(N|n)(G|g)", TokType::Terminal28 },
    pair<string, TokType>{ "(C|c)(S|s)(T|t)(R|r)", TokType::Terminal29 },
    pair<string, TokType>{ "(O|o)(B|b)(J|j)(E|e)(C|c)(T|t)", TokType::Terminal3 },
    pair<string, TokType>{ "(C|c)(V|v)(A|a)(R|r)", TokType::Terminal30 },
    pair<string, TokType>{ "(C|c)(V|v)(E|e)(R|r)(R|r)", TokType::Terminal31 },
    pair<string, TokType>{ "(D|d)(E|e)(B|b)(U|u)(G|g)", TokType::Terminal32 },
    pair<string, TokType>{ "(D|d)(O|o)(E|e)(V|v)(E|e)(N|n)(T|t)(S|s)", TokType::Terminal33 },
    pair<string, TokType>{ "(F|f)(I|i)(X|x)", TokType::Terminal34 },
    pair<string, TokType>{ "(I|i)(N|n)(T|t)", TokType::Terminal35 },
    pair<string, TokType>{ "(L|l)(E|e)(N|n)", TokType::Terminal36 },
    pair<string, TokType>{ "(L|l)(E|e)(N|n)(B|b)", TokType::Terminal37 },
    pair<string, TokType>{ "(M|m)(E|e)", TokType::Terminal38 },
    pair<string, TokType>{ "(P|p)(S|s)(E|e)(T|t)", TokType::Terminal39 },
    pair<string, TokType>{ "\\[(O|o)(B|b)(J|j)(E|e)(C|c)(T|t)\\]", TokType::Terminal4 },
    pair<string, TokType>{ "(S|s)(C|c)(A|a)(L|l)(E|e)", TokType::Terminal40 },
    pair<string, TokType>{ "(S|s)(G|g)(N|n)", TokType::Terminal41 },
    pair<string, TokType>{ "(C|c)(A|a)(L|l)(L|l)", TokType::Terminal42 },
    pair<string, TokType>{ "(C|c)(A|a)(S|s)(E|e)", TokType::Terminal43 },
    pair<string, TokType>{ "(C|c)(L|l)(O|o)(S|s)(E|e)", TokType::Terminal44 },
    pair<string, TokType>{ "(C|c)(O|o)(N|n)(S|s)(T|t)", TokType::Terminal45 },
    pair<string, TokType>{ "(D|d)(E|e)(C|c)(L|l)(A|a)(R|r)(E|e)", TokType::Terminal46 },
    pair<string, TokType>{ "(D|d)(E|e)(F|f)(B|b)(O|o)(O|o)(L|l)", TokType::Terminal47 },
    pair<string, TokType>{ "(D|d)(E|e)(F|f)(B|b)(Y|y)(T|t)(E|e)", TokType::Terminal48 },
    pair<string, TokType>{ "(D|d)(E|e)(F|f)(C|c)(U|u)(R|r)", TokType::Terminal49 },
    pair<string, TokType>{ "(B|b)(O|o)(O|o)(L|l)(E|e)(A|a)(N|n)", TokType::Terminal5 },
    pair<string, TokType>{ "(D|d)(E|e)(F|f)(D|d)(A|a)(T|t)(E|e)", TokType::Terminal50 },
    pair<string, TokType>{ "(D|d)(E|e)(F|f)(D|d)(B|b)(L|l)", TokType::Terminal51 },
    pair<string, TokType>{ "(D|d)(E|e)(F|f)(I|i)(N|n)(T|t)", TokType::Terminal52 },
    pair<string, TokType>{ "(D|d)(E|e)(F|f)(L|l)(N|n)(G|g)", TokType::Terminal53 },
    pair<string, TokType>{ "(D|d)(E|e)(F|f)(L|l)(N|n)(G|g)(L|l)(N|n)(G|g)", TokType::Terminal54 },
    pair<string, TokType>{ "(D|d)(E|e)(F|f)(L|l)(N|n)(G|g)(P|p)(T|t)(R|r)", TokType::Terminal55 },
    pair<string, TokType>{ "(D|d)(E|e)(F|f)(O|o)(B|b)(J|j)", TokType::Terminal56 },
    pair<string, TokType>{ "(D|d)(E|e)(F|f)(S|s)(N|n)(G|g)", TokType::Terminal57 },
    pair<string, TokType>{ "(D|d)(E|e)(F|f)(S|s)(T|t)(R|r)", TokType::Terminal58 },
    pair<string, TokType>{ "(D|d)(E|e)(F|f)(V|v)(A|a)(R|r)", TokType::Terminal59 },
    pair<string, TokType>{ "(B|b)(Y|y)(T|t)(E|e)", TokType::Terminal6 },
    pair<string, TokType>{ "(D|d)(I|i)(M|m)", TokType::Terminal60 },
    pair<string, TokType>{ "(D|d)(O|o)", TokType::Terminal61 },
    pair<string, TokType>{ "(E|e)(L|l)(S|s)(E|e)", TokType::Terminal62 },
    pair<string, TokType>{ "(E|e)(L|l)(S|s)(E|e)(I|i)(F|f)", TokType::Terminal63 },
    pair<string, TokType>{ "(E|e)(N|n)(D|d)", TokType::Terminal64 },
    pair<string, TokType>{ "(E|e)(N|n)(D|d) (I|i)(F|f)", TokType::Terminal65 },
    pair<string, TokType>{ "(E|e)(N|n)(U|u)(M|m)", TokType::Terminal66 },
    pair<string, TokType>{ "(E|e)(R|r)(A|a)(S|s)(E|e)", TokType::Terminal67 },
    pair<string, TokType>{ "(E|e)(V|v)(E|e)(N|n)(T|t)", TokType::Terminal68 },
    pair<string, TokType>{ "(E|e)(X|x)(I|i)(T|t)", TokType::Terminal69 },
    pair<string, TokType>{ "(C|c)(U|u)(R|r)(R|r)(E|e)(N|n)(C|c)(Y|y)", TokType::Terminal7 },
    pair<string, TokType>{ "(F|f)(O|o)(R|r)", TokType::Terminal70 },
    pair<string, TokType>{ "(F|f)(R|r)(I|i)(E|e)(N|n)(D|d)", TokType::Terminal71 },
    pair<string, TokType>{ "(F|f)(U|u)(N|n)(C|c)(T|t)(I|i)(O|o)(N|n)", TokType::Terminal72 },
    pair<string, TokType>{ "(G|g)(E|e)(T|t)", TokType::Terminal73 },
    pair<string, TokType>{ "(G|g)(L|l)(O|o)(B|b)(A|a)(L|l)", TokType::Terminal74 },
    pair<string, TokType>{ "(G|g)(O|o)(S|s)(U|u)(B|b)", TokType::Terminal75 },
    pair<string, TokType>{ "(G|g)(O|o)(T|t)(O|o)", TokType::Terminal76 },
    pair<string, TokType>{ "(I|i)(F|f)", TokType::Terminal77 },
    pair<string, TokType>{ "(I|i)(M|m)(P|p)(L|l)(E|e)(M|m)(E|e)(N|n)(T|t)(S|s)", TokType::Terminal78 },
    pair<string, TokType>{ "(I|i)(N|n)(P|p)(U|u)(T|t)", TokType::Terminal79 },
    pair<string, TokType>{ "(D|d)(A|a)(T|t)(E|e)", TokType::Terminal8 },
    pair<string, TokType>{ "(L|l)(E|e)(T|t)", TokType::Terminal80 },
    pair<string, TokType>{ "(L|l)(O|o)(C|c)(K|k)", TokType::Terminal81 },
    pair<string, TokType>{ "(L|l)(O|o)(O|o)(P|p)", TokType::Terminal82 },
    pair<string, TokType>{ "(L|l)(S|s)(E|e)(T|t)", TokType::Terminal83 },
    pair<string, TokType>{ "(N|n)(E|e)(X|x)(T|t)", TokType::Terminal84 },
    pair<string, TokType>{ "(O|o)(N|n)", TokType::Terminal85 },
    pair<string, TokType>{ "(O|o)(P|p)(E|e)(N|n)", TokType::Terminal86 },
    pair<string, TokType>{ "(O|o)(P|p)(T|t)(I|i)(O|o)(N|n)", TokType::Terminal87 },
    pair<string, TokType>{ "(P|p)(R|r)(I|i)(N|n)(T|t)", TokType::Terminal88 },
    pair<string, TokType>{ "(P|p)(R|r)(I|i)(V|v)(A|a)(T|t)(E|e)", TokType::Terminal89 },
    pair<string, TokType>{ "(D|d)(O|o)(U|u)(B|b)(L|l)(E|e)", TokType::Terminal9 },
    pair<string, TokType>{ "(P|p)(U|u)(B|b)(L|l)(I|i)(C|c)", TokType::Terminal90 },
    pair<string, TokType>{ "(P|p)(U|u)(T|t)", TokType::Terminal91 },
    pair<string, TokType>{ "(R|r)(A|a)(I|i)(S|s)(E|e)(E|e)(V|v)(E|e)(N|n)(T|t)", TokType::Terminal92 },
    pair<string, TokType>{ "(R|r)(E|e)(D|d)(I|i)(M|m)", TokType::Terminal93 },
    pair<string, TokType>{ "(R|r)(E|e)(S|s)(U|u)(M|m)(E|e)", TokType::Terminal94 },
    pair<string, TokType>{ "(R|r)(E|e)(T|t)(U|u)(R|r)(N|n)", TokType::Terminal95 },
    pair<string, TokType>{ "(R|r)(S|s)(E|e)(T|t)", TokType::Terminal96 },
    pair<string, TokType>{ "(S|s)(E|e)(E|e)(K|k)", TokType::Terminal97 },
    pair<string, TokType>{ "(S|s)(E|e)(L|l)(E|e)(C|c)(T|t)", TokType::Terminal98 },
    pair<string, TokType>{ "(S|s)(E|e)(T|t)", TokType::Terminal99 },
};
export map<string_view, int> terminal2IntTokenType =
{
    { eof, static_cast<int>(TokType::EOF) },
    { "expression", static_cast<int>(TokType::Expression) },
    { "Comment", static_cast<int>(TokType::Comment) },
    { "Comment-end-of-line", static_cast<int>(TokType::CommentEndOfLine) },
    { "Date-or-time", static_cast<int>(TokType::DateOrTime) },
    { "Float", static_cast<int>(TokType::Float) },
    { "Foreign-name", static_cast<int>(TokType::ForeignName) },
    { "Identifier", static_cast<int>(TokType::Identifier) },
    { "Integer", static_cast<int>(TokType::Integer) },
    { "Line-continuation", static_cast<int>(TokType::LineContinuation) },
    { "Normal-string", static_cast<int>(TokType::NormalString) },
    { "Quoted-identifier", static_cast<int>(TokType::QuotedIdentifier) },
    { "Rem-statement", static_cast<int>(TokType::RemStatement) },
    { "Type-suffix", static_cast<int>(TokType::TypeSuffix) },
    { "Typed-name", static_cast<int>(TokType::TypedName) },
    { "Whitespace", static_cast<int>(TokType::Whitespace) },
    { "terminal-0", static_cast<int>(TokType::Terminal0) },
    { "terminal-1", static_cast<int>(TokType::Terminal1) },
    { "terminal-10", static_cast<int>(TokType::Terminal10) },
    { "terminal-100", static_cast<int>(TokType::Terminal100) },
    { "terminal-101", static_cast<int>(TokType::Terminal101) },
    { "terminal-102", static_cast<int>(TokType::Terminal102) },
    { "terminal-103", static_cast<int>(TokType::Terminal103) },
    { "terminal-104", static_cast<int>(TokType::Terminal104) },
    { "terminal-105", static_cast<int>(TokType::Terminal105) },
    { "terminal-106", static_cast<int>(TokType::Terminal106) },
    { "terminal-107", static_cast<int>(TokType::Terminal107) },
    { "terminal-108", static_cast<int>(TokType::Terminal108) },
    { "terminal-109", static_cast<int>(TokType::Terminal109) },
    { "terminal-11", static_cast<int>(TokType::Terminal11) },
    { "terminal-110", static_cast<int>(TokType::Terminal110) },
    { "terminal-111", static_cast<int>(TokType::Terminal111) },
    { "terminal-112", static_cast<int>(TokType::Terminal112) },
    { "terminal-113", static_cast<int>(TokType::Terminal113) },
    { "terminal-114", static_cast<int>(TokType::Terminal114) },
    { "terminal-115", static_cast<int>(TokType::Terminal115) },
    { "terminal-116", static_cast<int>(TokType::Terminal116) },
    { "terminal-117", static_cast<int>(TokType::Terminal117) },
    { "terminal-118", static_cast<int>(TokType::Terminal118) },
    { "terminal-119", static_cast<int>(TokType::Terminal119) },
    { "terminal-12", static_cast<int>(TokType::Terminal12) },
    { "terminal-120", static_cast<int>(TokType::Terminal120) },
    { "terminal-121", static_cast<int>(TokType::Terminal121) },
    { "terminal-122", static_cast<int>(TokType::Terminal122) },
    { "terminal-123", static_cast<int>(TokType::Terminal123) },
    { "terminal-124", static_cast<int>(TokType::Terminal124) },
    { "terminal-125", static_cast<int>(TokType::Terminal125) },
    { "terminal-126", static_cast<int>(TokType::Terminal126) },
    { "terminal-127", static_cast<int>(TokType::Terminal127) },
    { "terminal-128", static_cast<int>(TokType::Terminal128) },
    { "terminal-129", static_cast<int>(TokType::Terminal129) },
    { "terminal-13", static_cast<int>(TokType::Terminal13) },
    { "terminal-130", static_cast<int>(TokType::Terminal130) },
    { "terminal-131", static_cast<int>(TokType::Terminal131) },
    { "terminal-132", static_cast<int>(TokType::Terminal132) },
    { "terminal-133", static_cast<int>(TokType::Terminal133) },
    { "terminal-134", static_cast<int>(TokType::Terminal134) },
    { "terminal-135", static_cast<int>(TokType::Terminal135) },
    { "terminal-136", static_cast<int>(TokType::Terminal136) },
    { "terminal-137", static_cast<int>(TokType::Terminal137) },
    { "terminal-138", static_cast<int>(TokType::Terminal138) },
    { "terminal-139", static_cast<int>(TokType::Terminal139) },
    { "terminal-14", static_cast<int>(TokType::Terminal14) },
    { "terminal-140", static_cast<int>(TokType::Terminal140) },
    { "terminal-141", static_cast<int>(TokType::Terminal141) },
    { "terminal-142", static_cast<int>(TokType::Terminal142) },
    { "terminal-143", static_cast<int>(TokType::Terminal143) },
    { "terminal-144", static_cast<int>(TokType::Terminal144) },
    { "terminal-145", static_cast<int>(TokType::Terminal145) },
    { "terminal-146", static_cast<int>(TokType::Terminal146) },
    { "terminal-147", static_cast<int>(TokType::Terminal147) },
    { "terminal-148", static_cast<int>(TokType::Terminal148) },
    { "terminal-149", static_cast<int>(TokType::Terminal149) },
    { "terminal-15", static_cast<int>(TokType::Terminal15) },
    { "terminal-150", static_cast<int>(TokType::Terminal150) },
    { "terminal-151", static_cast<int>(TokType::Terminal151) },
    { "terminal-152", static_cast<int>(TokType::Terminal152) },
    { "terminal-153", static_cast<int>(TokType::Terminal153) },
    { "terminal-154", static_cast<int>(TokType::Terminal154) },
    { "terminal-155", static_cast<int>(TokType::Terminal155) },
    { "terminal-156", static_cast<int>(TokType::Terminal156) },
    { "terminal-157", static_cast<int>(TokType::Terminal157) },
    { "terminal-158", static_cast<int>(TokType::Terminal158) },
    { "terminal-159", static_cast<int>(TokType::Terminal159) },
    { "terminal-16", static_cast<int>(TokType::Terminal16) },
    { "terminal-160", static_cast<int>(TokType::Terminal160) },
    { "terminal-161", static_cast<int>(TokType::Terminal161) },
    { "terminal-162", static_cast<int>(TokType::Terminal162) },
    { "terminal-163", static_cast<int>(TokType::Terminal163) },
    { "terminal-164", static_cast<int>(TokType::Terminal164) },
    { "terminal-165", static_cast<int>(TokType::Terminal165) },
    { "terminal-166", static_cast<int>(TokType::Terminal166) },
    { "terminal-167", static_cast<int>(TokType::Terminal167) },
    { "terminal-168", static_cast<int>(TokType::Terminal168) },
    { "terminal-169", static_cast<int>(TokType::Terminal169) },
    { "terminal-17", static_cast<int>(TokType::Terminal17) },
    { "terminal-170", static_cast<int>(TokType::Terminal170) },
    { "terminal-171", static_cast<int>(TokType::Terminal171) },
    { "terminal-172", static_cast<int>(TokType::Terminal172) },
    { "terminal-173", static_cast<int>(TokType::Terminal173) },
    { "terminal-174", static_cast<int>(TokType::Terminal174) },
    { "terminal-175", static_cast<int>(TokType::Terminal175) },
    { "terminal-176", static_cast<int>(TokType::Terminal176) },
    { "terminal-177", static_cast<int>(TokType::Terminal177) },
    { "terminal-178", static_cast<int>(TokType::Terminal178) },
    { "terminal-179", static_cast<int>(TokType::Terminal179) },
    { "terminal-18", static_cast<int>(TokType::Terminal18) },
    { "terminal-180", static_cast<int>(TokType::Terminal180) },
    { "terminal-181", static_cast<int>(TokType::Terminal181) },
    { "terminal-182", static_cast<int>(TokType::Terminal182) },
    { "terminal-183", static_cast<int>(TokType::Terminal183) },
    { "terminal-184", static_cast<int>(TokType::Terminal184) },
    { "terminal-185", static_cast<int>(TokType::Terminal185) },
    { "terminal-186", static_cast<int>(TokType::Terminal186) },
    { "terminal-187", static_cast<int>(TokType::Terminal187) },
    { "terminal-188", static_cast<int>(TokType::Terminal188) },
    { "terminal-189", static_cast<int>(TokType::Terminal189) },
    { "terminal-19", static_cast<int>(TokType::Terminal19) },
    { "terminal-190", static_cast<int>(TokType::Terminal190) },
    { "terminal-191", static_cast<int>(TokType::Terminal191) },
    { "terminal-192", static_cast<int>(TokType::Terminal192) },
    { "terminal-193", static_cast<int>(TokType::Terminal193) },
    { "terminal-194", static_cast<int>(TokType::Terminal194) },
    { "terminal-195", static_cast<int>(TokType::Terminal195) },
    { "terminal-196", static_cast<int>(TokType::Terminal196) },
    { "terminal-197", static_cast<int>(TokType::Terminal197) },
    { "terminal-198", static_cast<int>(TokType::Terminal198) },
    { "terminal-199", static_cast<int>(TokType::Terminal199) },
    { "terminal-2", static_cast<int>(TokType::Terminal2) },
    { "terminal-20", static_cast<int>(TokType::Terminal20) },
    { "terminal-200", static_cast<int>(TokType::Terminal200) },
    { "terminal-201", static_cast<int>(TokType::Terminal201) },
    { "terminal-202", static_cast<int>(TokType::Terminal202) },
    { "terminal-203", static_cast<int>(TokType::Terminal203) },
    { "terminal-204", static_cast<int>(TokType::Terminal204) },
    { "terminal-205", static_cast<int>(TokType::Terminal205) },
    { "terminal-206", static_cast<int>(TokType::Terminal206) },
    { "terminal-207", static_cast<int>(TokType::Terminal207) },
    { "terminal-208", static_cast<int>(TokType::Terminal208) },
    { "terminal-209", static_cast<int>(TokType::Terminal209) },
    { "terminal-21", static_cast<int>(TokType::Terminal21) },
    { "terminal-210", static_cast<int>(TokType::Terminal210) },
    { "terminal-211", static_cast<int>(TokType::Terminal211) },
    { "terminal-212", static_cast<int>(TokType::Terminal212) },
    { "terminal-213", static_cast<int>(TokType::Terminal213) },
    { "terminal-214", static_cast<int>(TokType::Terminal214) },
    { "terminal-215", static_cast<int>(TokType::Terminal215) },
    { "terminal-216", static_cast<int>(TokType::Terminal216) },
    { "terminal-217", static_cast<int>(TokType::Terminal217) },
    { "terminal-218", static_cast<int>(TokType::Terminal218) },
    { "terminal-219", static_cast<int>(TokType::Terminal219) },
    { "terminal-22", static_cast<int>(TokType::Terminal22) },
    { "terminal-220", static_cast<int>(TokType::Terminal220) },
    { "terminal-221", static_cast<int>(TokType::Terminal221) },
    { "terminal-222", static_cast<int>(TokType::Terminal222) },
    { "terminal-223", static_cast<int>(TokType::Terminal223) },
    { "terminal-224", static_cast<int>(TokType::Terminal224) },
    { "terminal-225", static_cast<int>(TokType::Terminal225) },
    { "terminal-226", static_cast<int>(TokType::Terminal226) },
    { "terminal-227", static_cast<int>(TokType::Terminal227) },
    { "terminal-228", static_cast<int>(TokType::Terminal228) },
    { "terminal-23", static_cast<int>(TokType::Terminal23) },
    { "terminal-24", static_cast<int>(TokType::Terminal24) },
    { "terminal-25", static_cast<int>(TokType::Terminal25) },
    { "terminal-26", static_cast<int>(TokType::Terminal26) },
    { "terminal-27", static_cast<int>(TokType::Terminal27) },
    { "terminal-28", static_cast<int>(TokType::Terminal28) },
    { "terminal-29", static_cast<int>(TokType::Terminal29) },
    { "terminal-3", static_cast<int>(TokType::Terminal3) },
    { "terminal-30", static_cast<int>(TokType::Terminal30) },
    { "terminal-31", static_cast<int>(TokType::Terminal31) },
    { "terminal-32", static_cast<int>(TokType::Terminal32) },
    { "terminal-33", static_cast<int>(TokType::Terminal33) },
    { "terminal-34", static_cast<int>(TokType::Terminal34) },
    { "terminal-35", static_cast<int>(TokType::Terminal35) },
    { "terminal-36", static_cast<int>(TokType::Terminal36) },
    { "terminal-37", static_cast<int>(TokType::Terminal37) },
    { "terminal-38", static_cast<int>(TokType::Terminal38) },
    { "terminal-39", static_cast<int>(TokType::Terminal39) },
    { "terminal-4", static_cast<int>(TokType::Terminal4) },
    { "terminal-40", static_cast<int>(TokType::Terminal40) },
    { "terminal-41", static_cast<int>(TokType::Terminal41) },
    { "terminal-42", static_cast<int>(TokType::Terminal42) },
    { "terminal-43", static_cast<int>(TokType::Terminal43) },
    { "terminal-44", static_cast<int>(TokType::Terminal44) },
    { "terminal-45", static_cast<int>(TokType::Terminal45) },
    { "terminal-46", static_cast<int>(TokType::Terminal46) },
    { "terminal-47", static_cast<int>(TokType::Terminal47) },
    { "terminal-48", static_cast<int>(TokType::Terminal48) },
    { "terminal-49", static_cast<int>(TokType::Terminal49) },
    { "terminal-5", static_cast<int>(TokType::Terminal5) },
    { "terminal-50", static_cast<int>(TokType::Terminal50) },
    { "terminal-51", static_cast<int>(TokType::Terminal51) },
    { "terminal-52", static_cast<int>(TokType::Terminal52) },
    { "terminal-53", static_cast<int>(TokType::Terminal53) },
    { "terminal-54", static_cast<int>(TokType::Terminal54) },
    { "terminal-55", static_cast<int>(TokType::Terminal55) },
    { "terminal-56", static_cast<int>(TokType::Terminal56) },
    { "terminal-57", static_cast<int>(TokType::Terminal57) },
    { "terminal-58", static_cast<int>(TokType::Terminal58) },
    { "terminal-59", static_cast<int>(TokType::Terminal59) },
    { "terminal-6", static_cast<int>(TokType::Terminal6) },
    { "terminal-60", static_cast<int>(TokType::Terminal60) },
    { "terminal-61", static_cast<int>(TokType::Terminal61) },
    { "terminal-62", static_cast<int>(TokType::Terminal62) },
    { "terminal-63", static_cast<int>(TokType::Terminal63) },
    { "terminal-64", static_cast<int>(TokType::Terminal64) },
    { "terminal-65", static_cast<int>(TokType::Terminal65) },
    { "terminal-66", static_cast<int>(TokType::Terminal66) },
    { "terminal-67", static_cast<int>(TokType::Terminal67) },
    { "terminal-68", static_cast<int>(TokType::Terminal68) },
    { "terminal-69", static_cast<int>(TokType::Terminal69) },
    { "terminal-7", static_cast<int>(TokType::Terminal7) },
    { "terminal-70", static_cast<int>(TokType::Terminal70) },
    { "terminal-71", static_cast<int>(TokType::Terminal71) },
    { "terminal-72", static_cast<int>(TokType::Terminal72) },
    { "terminal-73", static_cast<int>(TokType::Terminal73) },
    { "terminal-74", static_cast<int>(TokType::Terminal74) },
    { "terminal-75", static_cast<int>(TokType::Terminal75) },
    { "terminal-76", static_cast<int>(TokType::Terminal76) },
    { "terminal-77", static_cast<int>(TokType::Terminal77) },
    { "terminal-78", static_cast<int>(TokType::Terminal78) },
    { "terminal-79", static_cast<int>(TokType::Terminal79) },
    { "terminal-8", static_cast<int>(TokType::Terminal8) },
    { "terminal-80", static_cast<int>(TokType::Terminal80) },
    { "terminal-81", static_cast<int>(TokType::Terminal81) },
    { "terminal-82", static_cast<int>(TokType::Terminal82) },
    { "terminal-83", static_cast<int>(TokType::Terminal83) },
    { "terminal-84", static_cast<int>(TokType::Terminal84) },
    { "terminal-85", static_cast<int>(TokType::Terminal85) },
    { "terminal-86", static_cast<int>(TokType::Terminal86) },
    { "terminal-87", static_cast<int>(TokType::Terminal87) },
    { "terminal-88", static_cast<int>(TokType::Terminal88) },
    { "terminal-89", static_cast<int>(TokType::Terminal89) },
    { "terminal-9", static_cast<int>(TokType::Terminal9) },
    { "terminal-90", static_cast<int>(TokType::Terminal90) },
    { "terminal-91", static_cast<int>(TokType::Terminal91) },
    { "terminal-92", static_cast<int>(TokType::Terminal92) },
    { "terminal-93", static_cast<int>(TokType::Terminal93) },
    { "terminal-94", static_cast<int>(TokType::Terminal94) },
    { "terminal-95", static_cast<int>(TokType::Terminal95) },
    { "terminal-96", static_cast<int>(TokType::Terminal96) },
    { "terminal-97", static_cast<int>(TokType::Terminal97) },
    { "terminal-98", static_cast<int>(TokType::Terminal98) },
    { "terminal-99", static_cast<int>(TokType::Terminal99) },
};
export SimpleGrammars grammars =
{
    { "EOL", {{"Comment-end-of-line"}, {"Line-continuation"}} },
    { "EOS", {{"EOL"}, {"terminal-0"}} },
    { "LINE-END", {{"EOL"}} },
    { "String", {{"Quoted-identifier"}, {"Normal-string"}} },
    { "Builtin-type", {{"Reserved-type-identifier"}, {"terminal-1", "Reserved-type-identifier", "terminal-2"}, {"terminal-3"}, {"terminal-4"}} },
    { "Reserved-type-identifier", {{"terminal-5"}, {"terminal-6"}, {"terminal-7"}, {"terminal-8"}, {"terminal-9"}, {"terminal-10"}, {"terminal-11"}, {"terminal-12"}, {"terminal-13"}, {"terminal-14"}, {"terminal-15"}, {"terminal-16"}} },
    { "Reserved-name", {{"terminal-17"}, {"terminal-18"}, {"terminal-19"}, {"terminal-20"}, {"terminal-21"}, {"terminal-22"}, {"terminal-23"}, {"terminal-24"}, {"terminal-25"}, {"terminal-26"}, {"terminal-27"}, {"terminal-28"}, {"terminal-29"}, {"terminal-30"}, {"terminal-31"}, {"terminal-8"}, {"terminal-32"}, {"terminal-33"}, {"terminal-34"}, {"terminal-35"}, {"terminal-36"}, {"terminal-37"}, {"terminal-38"}, {"terminal-39"}, {"terminal-40"}, {"terminal-41"}, {"terminal-15"}} },
    { "Reserved-identifier", {{"statement-keyword"}, {"marker-keyword"}, {"operator-identifier"}, {"special-form"}, {"Reserved-type-identifier"}, {"Reserved-name"}, {"literal-identifier"}, {"rem-keyword"}, {"reserved-for-implementation-use"}, {"future-reserved"}} },
    { "statement-keyword", {{"terminal-42"}, {"terminal-43"}, {"terminal-44"}, {"terminal-45"}, {"terminal-46"}, {"terminal-47"}, {"terminal-48"}, {"terminal-49"}, {"terminal-50"}, {"terminal-51"}, {"terminal-52"}, {"terminal-53"}, {"terminal-54"}, {"terminal-55"}, {"terminal-56"}, {"terminal-57"}, {"terminal-58"}, {"terminal-59"}, {"terminal-60"}, {"terminal-61"}, {"terminal-62"}, {"terminal-63"}, {"terminal-64"}, {"terminal-65"}, {"terminal-66"}, {"terminal-67"}, {"terminal-68"}, {"terminal-69"}, {"terminal-70"}, {"terminal-71"}, {"terminal-72"}, {"terminal-73"}, {"terminal-74"}, {"terminal-75"}, {"terminal-76"}, {"terminal-77"}, {"terminal-78"}, {"terminal-79"}, {"terminal-80"}, {"terminal-81"}, {"terminal-82"}, {"terminal-83"}, {"terminal-84"}, {"terminal-85"}, {"terminal-86"}, {"terminal-87"}, {"terminal-88"}, {"terminal-89"}, {"terminal-90"}, {"terminal-91"}, {"terminal-92"}, {"terminal-93"}, {"terminal-94"}, {"terminal-95"}, {"terminal-96"}, {"terminal-97"}, {"terminal-98"}, {"terminal-99"}, {"terminal-100"}, {"terminal-101"}, {"terminal-102"}, {"terminal-103"}, {"terminal-104"}, {"terminal-105"}, {"terminal-106"}, {"terminal-107"}, {"terminal-108"}} },
    { "rem-keyword", {{"terminal-109"}} },
    { "marker-keyword", {{"terminal-110"}, {"terminal-111"}, {"terminal-112"}, {"terminal-113"}, {"terminal-43"}, {"terminal-114"}, {"terminal-62"}, {"terminal-115"}, {"terminal-116"}, {"terminal-117"}, {"terminal-118"}, {"terminal-119"}, {"terminal-108"}, {"terminal-120"}, {"terminal-121"}, {"terminal-122"}, {"terminal-123"}, {"terminal-124"}, {"terminal-125"}, {"terminal-126"}} },
    { "operator-identifier", {{"terminal-127"}, {"terminal-128"}, {"terminal-129"}, {"terminal-130"}, {"terminal-131"}, {"terminal-132"}, {"terminal-116"}, {"terminal-133"}, {"terminal-134"}, {"terminal-135"}, {"terminal-136"}, {"terminal-137"}} },
    { "special-form", {{"terminal-138"}, {"terminal-139"}, {"terminal-79"}, {"terminal-140"}, {"terminal-141"}, {"terminal-40"}, {"terminal-142"}} },
    { "literal-identifier", {{"boolean-literal-identifier"}, {"object-literal-identifier"}, {"variant-literal-identifier"}} },
    { "boolean-literal-identifier", {{"terminal-143"}, {"terminal-144"}} },
    { "object-literal-identifier", {{"terminal-145"}} },
    { "variant-literal-identifier", {{"terminal-146"}, {"terminal-147"}} },
    { "reserved-for-implementation-use", {{"terminal-148"}, {"terminal-149"}, {"terminal-150"}, {"terminal-151"}, {"terminal-152"}, {"terminal-153"}, {"terminal-154"}, {"terminal-155"}, {"terminal-156"}, {"terminal-157"}, {"terminal-158"}, {"terminal-159"}, {"terminal-160"}, {"terminal-161"}, {"terminal-162"}, {"terminal-163"}, {"terminal-164"}, {"terminal-165"}, {"terminal-166"}, {"terminal-167"}, {"terminal-168"}, {"terminal-169"}, {"terminal-170"}, {"terminal-171"}, {"terminal-172"}, {"terminal-173"}} },
    { "future-reserved", {{"terminal-174"}, {"terminal-175"}, {"terminal-176"}} },
    { "Procedural-module", {{"procedural-module-header", "EOS", "procedural-module-body"}} },
    { "Class-module", {{"class-module-header", "class-module-body"}} },
    { "procedural-module-header", {{"attribute", "terminal-164", "attr-eq", "Quoted-identifier", "attr-end"}} },
    { "class-module-header", {{"class-module-header_dup_1"}} },
    { "class-attr", {{"attribute", "terminal-164", "attr-eq", "Quoted-identifier", "attr-end"}, {"attribute", "terminal-157", "attr-eq", "terminal-144", "attr-end"}, {"attribute", "terminal-152", "attr-eq", "terminal-144", "attr-end"}, {"attribute", "terminal-165", "attr-eq", "boolean-literal-identifier", "attr-end"}, {"attribute", "terminal-155", "attr-eq", "boolean-literal-identifier", "attr-end"}, {"attribute", "terminal-153", "attr-eq", "boolean-literal-identifier", "attr-end"}} },
    { "attribute", {{"terminal-148"}} },
    { "attr-eq", {{"terminal-177"}} },
    { "attr-end", {{"LINE-END"}} },
    { "procedural-module-body", {{"procedural-module-declaration-section", "procedural-module-code-section"}} },
    { "class-module-body", {{"class-module-declaration-section"}} },
    { "unrestricted-name", {{"name"}, {"Reserved-identifier"}} },
    { "name", {{"untyped-name"}, {"Typed-name"}, {"file-number"}} },
    { "untyped-name", {{"Identifier"}, {"Foreign-name"}} },
    { "procedural-module-declaration-section", {{"procedural-module-declaration-section_op_2", "procedural-module-declaration-section_dup_6"}} },
    { "class-module-declaration-section", {{"class-module-declaration-section_op_7", "class-module-declaration-section_dup_11"}} },
    { "procedural-module-directive-element", {{"common-option-directive"}, {"option-private-directive"}, {"def-directive"}} },
    { "procedural-module-declaration-element", {{"common-module-declaration-element"}, {"global-variable-declaration"}, {"public-const-declaration"}, {"public-type-declaration"}, {"public-external-procedure-declaration"}, {"global-enum-declaration"}, {"common-option-directive"}, {"option-private-directive"}} },
    { "class-module-directive-element", {{"common-option-directive"}, {"def-directive"}, {"implements-directive"}} },
    { "class-module-declaration-element", {{"common-module-declaration-element"}, {"event-declaration"}, {"common-option-directive"}, {"implements-directive"}} },
    { "common-option-directive", {{"option-compare-directive"}, {"option-base-directive"}, {"option-explicit-directive"}, {"Rem-statement"}} },
    { "option-compare-directive", {{"terminal-87", "terminal-178", "option-compare-directive_com_12"}} },
    { "option-base-directive", {{"terminal-87", "terminal-181", "Integer"}} },
    { "option-explicit-directive", {{"terminal-87", "terminal-182"}} },
    { "option-private-directive", {{"terminal-87", "terminal-89", "terminal-183"}} },
    { "def-directive", {{"def-type", "letter-spec", "def-directive_dup_14"}} },
    { "letter-spec", {{"single-letter"}, {"universal-letter-range"}, {"letter-range"}} },
    { "single-letter", {{"Identifier"}} },
    { "universal-letter-range", {{"upper-case-A", "terminal-185", "upper-case-Z"}} },
    { "upper-case-A", {{"Identifier"}} },
    { "upper-case-Z", {{"Identifier"}} },
    { "letter-range", {{"first-letter", "terminal-185", "last-letter"}} },
    { "first-letter", {{"Identifier"}} },
    { "last-letter", {{"Identifier"}} },
    { "def-type", {{"terminal-47"}, {"terminal-48"}, {"terminal-49"}, {"terminal-50"}, {"terminal-51"}, {"terminal-52"}, {"terminal-53"}, {"terminal-54"}, {"terminal-55"}, {"terminal-56"}, {"terminal-57"}, {"terminal-58"}, {"terminal-59"}} },
    { "common-module-declaration-element", {{"module-variable-declaration"}, {"private-const-declaration"}, {"private-type-declaration"}, {"public-type-declaration"}, {"public-enum-declaration"}, {"private-enum-declaration"}, {"private-external-procedure-declaration"}, {"attribute-statement"}} },
    { "module-variable-declaration", {{"public-variable-declaration"}, {"private-variable-declaration"}} },
    { "global-variable-declaration", {{"terminal-74", "variable-declaration-list"}} },
    { "public-variable-declaration", {{"terminal-90", "public-variable-declaration_op_15", "module-variable-declaration-list"}} },
    { "private-variable-declaration", {{"private-variable-declaration_com_16", "private-variable-declaration_op_17", "module-variable-declaration-list"}} },
    { "module-variable-declaration-list", {{"module-variable-declaration-list_com_18", "module-variable-declaration-list_dup_21"}} },
    { "variable-declaration-list", {{"variable-dcl", "variable-declaration-list_dup_23"}} },
    { "variable-dcl", {{"typed-variable-dcl"}, {"untyped-variable-dcl"}} },
    { "typed-variable-dcl", {{"Typed-name", "typed-variable-dcl_op_24"}} },
    { "untyped-variable-dcl", {{"Identifier", "untyped-variable-dcl_op_25"}} },
    { "array-clause", {{"array-dim", "array-clause_op_26"}} },
    { "as-clause", {{"terminal-111", "as-clause_com_27"}} },
    { "withevents-variable-dcl", {{"terminal-119", "Identifier", "terminal-111", "class-type-name"}} },
    { "class-type-name", {{"defined-type-expression"}} },
    { "array-dim", {{"terminal-186", "array-dim_op_28", "terminal-187"}} },
    { "bounds-list", {{"dim-spec", "bounds-list_dup_30"}} },
    { "dim-spec", {{"constant-expression", "terminal-126", "constant-expression"}, {"constant-expression"}} },
    { "lower-bound", {{"constant-expression", "terminal-126"}} },
    { "upper-bound", {{"constant-expression"}} },
    { "as-auto-object", {{"terminal-116", "class-type-name"}} },
    { "as-type", {{"type-spec"}} },
    { "type-spec", {{"fixed-length-string-spec"}, {"type-expression"}} },
    { "fixed-length-string-spec", {{"terminal-15", "terminal-188", "string-length"}} },
    { "string-length", {{"constant-name"}, {"Integer"}} },
    { "constant-name", {{"simple-name-expression"}} },
    { "public-const-declaration", {{"public-const-declaration_com_31", "module-const-declaration"}} },
    { "private-const-declaration", {{"private-const-declaration_op_32", "module-const-declaration"}} },
    { "module-const-declaration", {{"const-declaration"}} },
    { "const-declaration", {{"terminal-45", "const-item-list"}} },
    { "const-item-list", {{"const-item", "const-item-list_dup_35"}} },
    { "const-item", {{"typed-name-const-item"}, {"untyped-name-const-item"}} },
    { "typed-name-const-item", {{"Typed-name", "terminal-189", "constant-expression"}} },
    { "untyped-name-const-item", {{"Identifier", "untyped-name-const-item_op_36", "terminal-189", "constant-expression"}} },
    { "const-as-clause", {{"terminal-111", "Builtin-type"}} },
    { "public-type-declaration", {{"public-type-declaration_op_37", "udt-declaration"}} },
    { "private-type-declaration", {{"terminal-89", "udt-declaration"}} },
    { "udt-declaration", {{"terminal-103", "untyped-name", "EOS", "udt-member-list", "EOS", "terminal-64", "terminal-103"}} },
    { "udt-member-list", {{"udt-element", "udt-member-list_dup_40"}} },
    { "udt-element", {{"Rem-statement"}, {"udt-member"}} },
    { "udt-member", {{"reserved-name-member-dcl"}, {"untyped-name-member-dcl"}} },
    { "untyped-name-member-dcl", {{"Identifier", "optional-array-clause"}} },
    { "reserved-name-member-dcl", {{"reserved-member-name", "as-clause"}} },
    { "optional-array-clause", {{"optional-array-clause_op_41", "as-clause"}} },
    { "reserved-member-name", {{"statement-keyword"}, {"marker-keyword"}, {"operator-identifier"}, {"special-form"}, {"Reserved-name"}, {"literal-identifier"}, {"reserved-for-implementation-use"}, {"future-reserved"}} },
    { "global-enum-declaration", {{"terminal-74", "enum-declaration"}} },
    { "public-enum-declaration", {{"public-enum-declaration_op_42", "enum-declaration"}} },
    { "private-enum-declaration", {{"terminal-89", "enum-declaration"}} },
    { "enum-declaration", {{"terminal-66", "untyped-name", "EOS", "enum-member-list", "terminal-64", "terminal-66"}} },
    { "enum-member-list", {{"enum-member-list_dup_44"}} },
    { "enum-element", {{"Rem-statement"}, {"enum-member"}} },
    { "enum-member", {{"untyped-name", "enum-member_op_45"}} },
    { "public-external-procedure-declaration", {{"public-external-procedure-declaration_op_46", "external-proc-dcl"}} },
    { "private-external-procedure-declaration", {{"terminal-89", "external-proc-dcl"}} },
    { "external-proc-dcl", {{"terminal-46", "external-proc-dcl_op_47", "external-proc-dcl_com_48"}} },
    { "external-sub", {{"terminal-102", "subroutine-name", "lib-info", "external-sub_op_49"}} },
    { "external-function", {{"terminal-72", "function-name", "lib-info", "external-function_op_50", "external-function_op_51"}} },
    { "lib-info", {{"lib-clause", "lib-info_op_52"}} },
    { "lib-clause", {{"terminal-191", "String"}} },
    { "alias-clause", {{"terminal-192", "String"}} },
    { "implements-directive", {{"terminal-78", "class-type-name"}} },
    { "event-declaration", {{"event-declaration_op_53", "terminal-68", "Identifier", "event-declaration_op_54"}} },
    { "event-parameter-list", {{"terminal-186", "event-parameter-list_op_55", "terminal-187"}} },
    { "procedural-module-code-section", {{"procedural-module-code-section_dup_57"}} },
    { "class-module-code-section", {{"class-module-code-section_dup_59"}} },
    { "procedural-module-code-element", {{"common-module-code-element"}} },
    { "class-module-code-element", {{"common-module-code-element"}, {"implements-directive"}} },
    { "common-module-code-element", {{"Rem-statement"}, {"procedure-declaration"}} },
    { "procedure-declaration", {{"subroutine-declaration"}, {"function-declaration"}, {"property-get-declaration"}, {"property-lhs-declaration"}} },
    { "subroutine-declaration", {{"procedure-scope", "subroutine-declaration_op_60", "terminal-102", "subroutine-name", "subroutine-declaration_op_61", "subroutine-declaration_op_62", "EOS", "subroutine-declaration_op_63", "subroutine-declaration_op_64", "terminal-64", "terminal-102", "procedure-tail"}} },
    { "function-declaration", {{"procedure-scope", "function-declaration_op_65", "terminal-72", "function-name", "function-declaration_op_66", "function-declaration_op_67", "function-declaration_op_68", "EOS", "function-declaration_op_69", "function-declaration_op_70", "terminal-64", "terminal-72", "procedure-tail"}} },
    { "property-get-declaration", {{"procedure-scope", "property-get-declaration_op_71", "terminal-193", "terminal-73", "function-name", "property-get-declaration_op_72", "property-get-declaration_op_73", "property-get-declaration_op_74", "EOS", "property-get-declaration_op_75", "property-get-declaration_op_76", "terminal-64", "terminal-193", "procedure-tail"}} },
    { "property-lhs-declaration", {{"procedure-scope", "property-lhs-declaration_op_77", "terminal-193", "property-lhs-declaration_com_78", "subroutine-name", "property-parameters", "property-lhs-declaration_op_79", "EOS", "property-lhs-declaration_op_80", "property-lhs-declaration_op_81", "terminal-64", "terminal-193", "procedure-tail"}} },
    { "end-label", {{"statement-label-definition"}} },
    { "procedure-tail", {{"procedure-tail_op_82", "LINE-END"}, {"Comment"}, {"terminal-0", "Rem-statement"}} },
    { "procedure-scope", {{"procedure-scope_op_83"}} },
    { "initial-static", {{"terminal-100"}} },
    { "trailing-static", {{"terminal-100"}} },
    { "subroutine-name", {{"Identifier"}, {"prefixed-name"}} },
    { "function-name", {{"Typed-name"}, {"subroutine-name"}} },
    { "prefixed-name", {{"event-handler-name"}, {"implemented-name"}, {"lifecycle-handler-name"}} },
    { "function-type", {{"terminal-111", "type-expression", "function-type_op_84"}} },
    { "array-designator", {{"terminal-186", "terminal-187"}} },
    { "procedure-parameters", {{"terminal-186", "procedure-parameters_op_85", "terminal-187"}} },
    { "property-parameters", {{"terminal-186", "property-parameters_op_86", "value-param", "terminal-187"}} },
    { "parameter-list", {{"positional-parameters", "terminal-184", "optional-parameters"}, {"positional-parameters", "parameter-list_op_87"}, {"optional-parameters"}, {"param-array"}} },
    { "positional-parameters", {{"positional-param", "positional-parameters_dup_89"}} },
    { "optional-parameters", {{"optional-param", "optional-parameters_dup_91"}} },
    { "value-param", {{"positional-param"}} },
    { "positional-param", {{"positional-param_op_92", "param-dcl"}} },
    { "optional-param", {{"optional-prefix", "param-dcl", "optional-param_op_93"}} },
    { "param-array", {{"terminal-121", "Identifier", "terminal-186", "terminal-187", "param-array_op_94"}} },
    { "param-dcl", {{"untyped-name-param-dcl"}, {"typed-name-param-dcl"}} },
    { "untyped-name-param-dcl", {{"Identifier", "untyped-name-param-dcl_op_96"}} },
    { "typed-name-param-dcl", {{"Typed-name", "typed-name-param-dcl_op_97"}} },
    { "optional-prefix", {{"terminal-120", "optional-prefix_op_98"}, {"optional-prefix_op_99", "terminal-120"}} },
    { "parameter-mechanism", {{"terminal-195"}, {"terminal-112"}} },
    { "parameter-type", {{"parameter-type_op_100", "terminal-111", "parameter-type_com_101"}} },
    { "default-value", {{"terminal-189", "constant-expression"}} },
    { "event-handler-name", {{"Identifier"}} },
    { "implemented-name", {{"Identifier"}} },
    { "lifecycle-handler-name", {{"terminal-196"}, {"terminal-197"}} },
    { "procedure-body", {{"statement-block"}} },
    { "statement-block", {{"statement-block_dup_103"}} },
    { "block-statement", {{"statement-label-definition"}, {"Rem-statement"}, {"statement"}, {"attribute-statement"}} },
    { "attribute-statement", {{"attribute", "attribute-statement_op_104", "reserved-for-implementation-use", "attr-eq", "attribute-statement_op_105"}} },
    { "statement", {{"control-statement"}, {"data-manipulation-statement"}, {"error-handling-statement"}, {"file-statement"}} },
    { "statement-label-definition", {{"statement-label-definition_com_106"}} },
    { "statement-label", {{"identifier-statement-label"}, {"line-number-label"}} },
    { "statement-label-list", {{"statement-label", "statement-label-list_op_108"}} },
    { "identifier-statement-label", {{"Identifier"}} },
    { "line-number-label", {{"Integer"}} },
    { "control-statement", {{"if-statement"}, {"control-statement-except-multiline-if"}} },
    { "control-statement-except-multiline-if", {{"call-statement"}, {"while-statement"}, {"for-statement"}, {"exit-for-statement"}, {"do-statement"}, {"exit-do-statement"}, {"single-line-if-statement"}, {"select-case-statement"}, {"stop-statement"}, {"goto-statement"}, {"on-goto-statement"}, {"gosub-statement"}, {"return-statement"}, {"on-gosub-statement"}, {"for-each-statement"}, {"exit-sub-statement"}, {"exit-function-statement"}, {"exit-property-statement"}, {"raiseevent-statement"}, {"with-statement"}, {"end-statement"}, {"assert-statement"}} },
    { "call-statement", {{"terminal-42", "call-statement_com_109"}, {"call-statement_com_110", "argument-list"}} },
    { "while-statement", {{"terminal-106", "boolean-expression", "EOS", "statement-block", "terminal-105"}} },
    { "for-statement", {{"simple-for-statement"}, {"explicit-for-statement"}} },
    { "simple-for-statement", {{"for-clause", "EOS", "statement-block", "terminal-84"}} },
    { "explicit-for-statement", {{"for-clause", "EOS", "statement-block", "explicit-for-statement_com_111", "bound-variable-expression"}} },
    { "nested-for-statement", {{"explicit-for-statement"}, {"explicit-for-each-statement"}} },
    { "for-clause", {{"terminal-70", "bound-variable-expression", "terminal-189", "start-value", "terminal-126", "end-value", "for-clause_op_112"}} },
    { "start-value", {{"expression"}} },
    { "end-value", {{"expression"}} },
    { "step-clause", {{"terminal-199", "step-increment"}} },
    { "step-increment", {{"expression"}} },
    { "for-each-statement", {{"simple-for-each-statement"}, {"explicit-for-each-statement"}} },
    { "simple-for-each-statement", {{"for-each-clause", "EOS", "statement-block", "terminal-84"}} },
    { "explicit-for-each-statement", {{"for-each-clause", "EOS", "statement-block", "explicit-for-each-statement_com_113", "bound-variable-expression"}} },
    { "for-each-clause", {{"terminal-70", "terminal-114", "bound-variable-expression", "terminal-115", "collection"}} },
    { "collection", {{"expression"}} },
    { "exit-for-statement", {{"terminal-69", "terminal-70"}} },
    { "do-statement", {{"terminal-61", "do-statement_op_114", "EOS", "statement-block", "terminal-82", "do-statement_op_115"}} },
    { "condition-clause", {{"while-clause"}, {"until-clause"}} },
    { "while-clause", {{"terminal-106", "boolean-expression"}} },
    { "until-clause", {{"terminal-118", "boolean-expression"}} },
    { "exit-do-statement", {{"terminal-69", "terminal-61"}} },
    { "if-statement", {{"terminal-77", "boolean-expression", "terminal-125", "EOL", "statement-block", "if-statement_dup_117", "if-statement_op_118", "if-statement_com_119"}} },
    { "else-if-block", {{"terminal-63", "boolean-expression", "terminal-125", "EOL", "statement-block"}, {"terminal-63", "boolean-expression", "terminal-125", "statement-block"}} },
    { "else-block", {{"terminal-62", "statement-block"}} },
    { "single-line-if-statement", {{"if-with-non-empty-then"}, {"if-with-empty-then"}} },
    { "if-with-non-empty-then", {{"terminal-77", "boolean-expression", "terminal-125", "list-or-label", "if-with-non-empty-then_op_120"}} },
    { "if-with-empty-then", {{"terminal-77", "boolean-expression", "terminal-125", "single-line-else-clause"}} },
    { "single-line-else-clause", {{"terminal-62", "single-line-else-clause_op_121"}} },
    { "list-or-label", {{"statement-label", "list-or-label_dup_125"}, {"list-or-label_op_126", "same-line-statement", "list-or-label_dup_130"}} },
    { "same-line-statement", {{"file-statement"}, {"error-handling-statement"}, {"data-manipulation-statement"}, {"control-statement-except-multiline-if"}} },
    { "select-case-statement", {{"terminal-98", "terminal-43", "Whitespace", "select-expression", "EOS", "select-case-statement_dup_133", "select-case-statement_op_134", "terminal-64", "terminal-98"}} },
    { "case-clause", {{"terminal-43", "range-clause", "case-clause_dup_136", "EOS", "statement-block"}} },
    { "case-else-clause", {{"terminal-43", "terminal-62", "EOS", "statement-block"}} },
    { "range-clause", {{"expression"}, {"start-value", "terminal-126", "end-value"}, {"range-clause_op_137", "comparison-operator", "expression"}} },
    { "select-expression", {{"expression"}} },
    { "comparison-operator", {{"terminal-189"}, {"terminal-200", "terminal-201"}, {"terminal-201", "terminal-200"}, {"terminal-200"}, {"terminal-201"}, {"terminal-201", "terminal-189"}, {"terminal-189", "terminal-201"}, {"terminal-200", "terminal-189"}, {"terminal-189", "terminal-200"}} },
    { "stop-statement", {{"terminal-101"}} },
    { "goto-statement", {{"goto-statement_com_138", "statement-label"}} },
    { "on-goto-statement", {{"terminal-85", "expression", "terminal-76", "statement-label-list"}} },
    { "gosub-statement", {{"gosub-statement_com_139", "statement-label"}} },
    { "return-statement", {{"terminal-95"}} },
    { "on-gosub-statement", {{"terminal-85", "expression", "terminal-75", "statement-label-list"}} },
    { "exit-sub-statement", {{"terminal-69", "terminal-102"}} },
    { "exit-function-statement", {{"terminal-69", "terminal-72"}} },
    { "exit-property-statement", {{"terminal-69", "terminal-193"}} },
    { "raiseevent-statement", {{"terminal-92", "Identifier", "raiseevent-statement_op_140"}} },
    { "event-argument-list", {{"event-argument-list_op_141"}} },
    { "event-argument", {{"expression"}} },
    { "with-statement", {{"terminal-107", "expression", "EOS", "statement-block", "terminal-64", "terminal-107"}} },
    { "end-statement", {{"terminal-64"}} },
    { "assert-statement", {{"terminal-32", "terminal-198", "terminal-203", "boolean-expression"}} },
    { "data-manipulation-statement", {{"local-variable-declaration"}, {"static-variable-declaration"}, {"local-const-declaration"}, {"redim-statement"}, {"erase-statement"}, {"mid-statement"}, {"rset-statement"}, {"lset-statement"}, {"let-statement"}, {"set-statement"}} },
    { "local-variable-declaration", {{"terminal-60", "local-variable-declaration_op_144", "variable-declaration-list"}} },
    { "static-variable-declaration", {{"terminal-100", "variable-declaration-list"}} },
    { "local-const-declaration", {{"const-declaration"}} },
    { "redim-statement", {{"terminal-93", "redim-statement_op_145", "redim-declaration-list"}} },
    { "redim-declaration-list", {{"redim-variable-dcl", "redim-declaration-list_dup_147"}} },
    { "redim-variable-dcl", {{"redim-typed-variable-dcl"}, {"redim-untyped-dcl"}, {"with-expression-dcl"}, {"member-access-expression-dcl"}} },
    { "redim-typed-variable-dcl", {{"Typed-name", "dynamic-array-dim"}} },
    { "redim-untyped-dcl", {{"untyped-name", "dynamic-array-clause"}} },
    { "with-expression-dcl", {{"with-expression", "dynamic-array-clause"}} },
    { "member-access-expression-dcl", {{"member-access-expression", "dynamic-array-clause"}} },
    { "dynamic-array-dim", {{"terminal-186", "dynamic-bounds-list", "terminal-187"}} },
    { "dynamic-bounds-list", {{"dynamic-dim-spec", "dynamic-bounds-list_dup_150"}} },
    { "dynamic-dim-spec", {{"dynamic-dim-spec_op_151", "dynamic-upper-bound"}} },
    { "dynamic-lower-bound", {{"integer-expression", "terminal-126"}} },
    { "dynamic-upper-bound", {{"integer-expression"}} },
    { "dynamic-array-clause", {{"dynamic-array-dim", "dynamic-array-clause_op_152"}} },
    { "erase-statement", {{"terminal-67", "erase-list"}} },
    { "erase-list", {{"erase-element", "erase-list_dup_155"}} },
    { "erase-element", {{"l-expression"}} },
    { "mid-statement", {{"mode-specifier", "terminal-186", "string-argument", "terminal-184", "start", "mid-statement_op_156", "terminal-187", "terminal-189", "expression"}} },
    { "mode-specifier", {{"mode-specifier_com_157"}} },
    { "string-argument", {{"bound-variable-expression"}} },
    { "start", {{"integer-expression"}} },
    { "length", {{"integer-expression"}} },
    { "lset-statement", {{"terminal-83", "bound-variable-expression", "terminal-189", "expression"}} },
    { "rset-statement", {{"terminal-96", "bound-variable-expression", "terminal-189", "expression"}} },
    { "let-statement", {{"let-statement_op_158", "l-expression", "terminal-189", "expression"}} },
    { "set-statement", {{"terminal-99", "l-expression", "terminal-189", "expression"}} },
    { "error-handling-statement", {{"on-error-statement"}, {"resume-statement"}, {"error-statement"}} },
    { "on-error-statement", {{"terminal-85", "terminal-208", "error-behavior"}} },
    { "error-behavior", {{"terminal-94", "terminal-84"}, {"terminal-76", "error-behavior_com_159"}} },
    { "resume-statement", {{"terminal-94", "resume-statement_op_160"}} },
    { "error-statement", {{"terminal-208", "error-number"}} },
    { "error-number", {{"integer-expression"}} },
    { "file-statement", {{"open-statement"}, {"close-statement"}, {"seek-statement"}, {"lock-statement"}, {"unlock-statement"}, {"line-input-statement"}, {"width-statement"}, {"print-statement"}, {"write-statement"}, {"input-statement"}, {"put-statement"}, {"get-statement"}} },
    { "open-statement", {{"terminal-86", "path-name", "open-statement_op_162", "open-statement_op_163", "open-statement_op_164", "terminal-111", "file-number", "open-statement_op_165"}} },
    { "path-name", {{"expression"}} },
    { "mode-clause", {{"terminal-70", "mode"}} },
    { "mode", {{"terminal-210"}, {"terminal-179"}, {"terminal-79"}, {"terminal-211"}, {"terminal-212"}} },
    { "access-clause", {{"terminal-213", "access"}} },
    { "access", {{"terminal-214"}, {"terminal-108"}, {"terminal-214", "terminal-108"}} },
    { "lock", {{"terminal-117"}, {"terminal-81", "terminal-214"}, {"terminal-81", "terminal-108"}, {"terminal-81", "terminal-214", "terminal-108"}} },
    { "len-clause", {{"terminal-36", "terminal-189", "rec-length"}} },
    { "rec-length", {{"expression"}} },
    { "file-number", {{"marked-file-number"}, {"unmarked-file-number"}} },
    { "marked-file-number", {{"terminal-215", "expression"}} },
    { "unmarked-file-number", {{"expression"}} },
    { "close-statement", {{"terminal-216"}, {"terminal-44", "close-statement_op_166"}} },
    { "file-number-list", {{"file-number", "file-number-list_dup_169"}} },
    { "seek-statement", {{"terminal-97", "file-number", "terminal-184", "position"}} },
    { "position", {{"expression"}} },
    { "lock-statement", {{"terminal-81", "file-number", "lock-statement_op_170"}} },
    { "record-range", {{"start-record-number"}, {"record-range_op_171", "terminal-126", "end-record-number"}} },
    { "start-record-number", {{"expression"}} },
    { "end-record-number", {{"expression"}} },
    { "unlock-statement", {{"terminal-104", "file-number", "unlock-statement_op_172"}} },
    { "line-input-statement", {{"terminal-217", "terminal-79", "marked-file-number", "terminal-184", "variable-name"}} },
    { "variable-name", {{"variable-expression"}} },
    { "width-statement", {{"terminal-218", "marked-file-number", "terminal-184", "line-width"}} },
    { "line-width", {{"expression"}} },
    { "print-statement", {{"print-statement_op_173", "terminal-88", "marked-file-number", "terminal-184", "print-statement_op_175"}} },
    { "output-list", {{"output-list_dup_177"}} },
    { "output-item", {{"output-item_op_178", "output-item_op_179"}} },
    { "output-clause", {{"output-clause_com_180"}} },
    { "char-position", {{"char-position_com_181"}} },
    { "output-expression", {{"expression"}} },
    { "spc-clause", {{"terminal-123", "terminal-186", "spc-number", "terminal-187"}} },
    { "spc-number", {{"expression"}} },
    { "tab-clause", {{"terminal-124", "tab-clause_op_182"}} },
    { "tab-number-clause", {{"terminal-186", "tab-number", "terminal-187"}} },
    { "tab-number", {{"expression"}} },
    { "write-statement", {{"terminal-108", "marked-file-number", "terminal-184", "write-statement_op_183"}} },
    { "input-statement", {{"terminal-79", "marked-file-number", "terminal-184", "input-list"}} },
    { "input-list", {{"input-variable", "input-list_dup_186"}} },
    { "input-variable", {{"bound-variable-expression"}} },
    { "put-statement", {{"terminal-91", "file-number", "terminal-184", "put-statement_op_187", "terminal-184", "data"}} },
    { "record-number", {{"expression"}} },
    { "data", {{"expression"}} },
    { "get-statement", {{"terminal-73", "file-number", "terminal-184", "get-statement_op_188", "terminal-184", "variable"}} },
    { "variable", {{"variable-expression"}} },
    { "expression", {{"value-expression"}, {"l-expression"}} },
    { "value-expression", {{"literal-expression"}, {"parenthesized-expression"}, {"typeof-is-expression"}, {"new-expression"}, {"operator-expression"}} },
    { "l-expression", {{"simple-name-expression"}, {"instance-expression"}, {"member-access-expression"}, {"index-expression"}, {"dictionary-access-expression"}, {"with-expression"}} },
    { "literal-expression", {{"Integer"}, {"Float"}, {"Date-or-time"}, {"String"}, {"literal-identifier", "literal-expression_op_189"}} },
    { "parenthesized-expression", {{"terminal-186", "expression", "terminal-187"}} },
    { "typeof-is-expression", {{"terminal-136", "expression", "terminal-131", "type-expression"}} },
    { "new-expression", {{"terminal-116", "type-expression"}} },
    { "operator-expression", {{"arithmetic-operator-expression"}, {"concatenation-operator-expression"}, {"relational-operator-expression"}, {"like-operator-expression"}, {"is-operator-expression"}, {"logical-operator-expression"}} },
    { "arithmetic-operator-expression", {{"unary-minus-operator-expression"}, {"addition-operator-expression"}, {"subtraction-operator-expression"}, {"multiplication-operator-expression"}, {"division-operator-expression"}, {"integer-division-operator-expression"}, {"modulo-operator-expression"}, {"exponentiation-operator-expression"}} },
    { "unary-minus-operator-expression", {{"terminal-185", "expression"}} },
    { "addition-operator-expression", {{"expression", "terminal-220", "expression"}} },
    { "subtraction-operator-expression", {{"expression", "terminal-185", "expression"}} },
    { "multiplication-operator-expression", {{"expression", "terminal-188", "expression"}} },
    { "division-operator-expression", {{"expression", "terminal-221", "expression"}} },
    { "integer-division-operator-expression", {{"expression", "terminal-222", "expression"}} },
    { "modulo-operator-expression", {{"expression", "terminal-133", "expression"}} },
    { "exponentiation-operator-expression", {{"expression", "terminal-223", "expression"}} },
    { "concatenation-operator-expression", {{"expression", "terminal-224", "expression"}} },
    { "relational-operator-expression", {{"equality-operator-expression"}, {"inequality-operator-expression"}, {"less-than-operator-expression"}, {"greater-than-operator-expression"}, {"less-than-equal-operator-expression"}, {"greater-than-equal-operator-expression"}} },
    { "equality-operator-expression", {{"expression", "terminal-189", "expression"}} },
    { "inequality-operator-expression", {{"expression", "inequality-operator-expression_com_190", "expression"}} },
    { "less-than-operator-expression", {{"expression", "terminal-200", "expression"}} },
    { "greater-than-operator-expression", {{"expression", "terminal-201", "expression"}} },
    { "less-than-equal-operator-expression", {{"expression", "less-than-equal-operator-expression_com_191", "expression"}} },
    { "greater-than-equal-operator-expression", {{"expression", "greater-than-equal-operator-expression_com_192", "expression"}} },
    { "like-operator-expression", {{"expression", "terminal-132", "like-pattern-expression"}} },
    { "like-pattern-expression", {{"expression"}} },
    { "like-pattern-string", {{"like-pattern-string_dup_194"}} },
    { "like-pattern-element", {{"like-pattern-char"}, {"terminal-225"}, {"terminal-215"}, {"terminal-188"}, {"like-pattern-charlist"}} },
    { "like-pattern-char", {{"terminal-226"}} },
    { "like-pattern-charlist", {{"terminal-1", "like-pattern-charlist_op_195", "like-pattern-charlist_op_196", "like-pattern-charlist_dup_198", "like-pattern-charlist_op_199", "terminal-2"}} },
    { "like-pattern-charlist-element", {{"like-pattern-charlist-char"}, {"like-pattern-charlist-range"}} },
    { "like-pattern-charlist-range", {{"like-pattern-charlist-char", "terminal-185", "like-pattern-charlist-char"}} },
    { "like-pattern-charlist-char", {{"terminal-228"}} },
    { "is-operator-expression", {{"expression", "terminal-131", "expression"}} },
    { "logical-operator-expression", {{"not-operator-expression"}, {"and-operator-expression"}, {"or-operator-expression"}, {"xor-operator-expression"}, {"imp-operator-expression"}, {"eqv-operator-expression"}} },
    { "not-operator-expression", {{"terminal-134", "expression"}} },
    { "and-operator-expression", {{"expression", "terminal-128", "expression"}} },
    { "or-operator-expression", {{"expression", "terminal-135", "expression"}} },
    { "xor-operator-expression", {{"expression", "terminal-137", "expression"}} },
    { "eqv-operator-expression", {{"expression", "terminal-129", "expression"}} },
    { "imp-operator-expression", {{"expression", "terminal-130", "expression"}} },
    { "simple-name-expression", {{"name"}, {"special-form"}, {"Reserved-name"}} },
    { "instance-expression", {{"terminal-38"}} },
    { "member-access-expression", {{"l-expression", "terminal-198", "unrestricted-name"}, {"l-expression", "Line-continuation", "terminal-198", "unrestricted-name"}} },
    { "index-expression", {{"l-expression", "terminal-186", "argument-list", "terminal-187"}} },
    { "argument-list", {{"argument-list_op_200"}} },
    { "positional-or-named-argument-list", {{"positional-or-named-argument-list_dup_202", "required-positional-argument"}, {"positional-or-named-argument-list_dup_204", "named-argument-list"}} },
    { "positional-argument", {{"positional-argument_op_205"}} },
    { "required-positional-argument", {{"argument-expression"}} },
    { "named-argument-list", {{"named-argument", "named-argument-list_dup_207"}} },
    { "named-argument", {{"unrestricted-name", "terminal-0", "terminal-189", "argument-expression"}} },
    { "argument-expression", {{"argument-expression_op_208", "expression"}, {"addressof-expression"}} },
    { "dictionary-access-expression", {{"l-expression", "terminal-227", "unrestricted-name"}, {"l-expression", "Line-continuation", "terminal-227", "dictionary-access-expression_op_209", "unrestricted-name"}} },
    { "with-expression", {{"with-member-access-expression"}, {"with-dictionary-access-expression"}} },
    { "with-member-access-expression", {{"terminal-198", "unrestricted-name"}} },
    { "with-dictionary-access-expression", {{"terminal-227", "unrestricted-name"}} },
    { "constant-expression", {{"expression"}} },
    { "cc-expression", {{"expression"}} },
    { "boolean-expression", {{"expression"}} },
    { "integer-expression", {{"expression"}} },
    { "variable-expression", {{"l-expression"}} },
    { "bound-variable-expression", {{"l-expression"}} },
    { "type-expression", {{"Builtin-type"}, {"defined-type-expression"}} },
    { "defined-type-expression", {{"member-access-expression"}} },
    { "addressof-expression", {{"terminal-127", "procedure-pointer-expression"}} },
    { "procedure-pointer-expression", {{"simple-name-expression"}, {"member-access-expression"}} },
    { "class-module-header_dup_1", {{"class-module-header_dup_basicItem_0"}, {"class-module-header_dup_basicItem_0", "class-module-header_dup_1"}} },
    { "class-module-header_dup_basicItem_0", {{"class-attr"}} },
    { "procedural-module-declaration-section_op_2_dup_4", {{}, {"procedural-module-declaration-section_op_2_dup_basicItem_3", "procedural-module-declaration-section_op_2_dup_4"}} },
    { "procedural-module-declaration-section_op_2_dup_basicItem_3", {{"procedural-module-directive-element", "EOS"}} },
    { "procedural-module-declaration-section_op_2", {{"procedural-module-declaration-section_op_2_dup_4", "def-directive"}, {}} },
    { "procedural-module-declaration-section_dup_6", {{}, {"procedural-module-declaration-section_dup_basicItem_5", "procedural-module-declaration-section_dup_6"}} },
    { "procedural-module-declaration-section_dup_basicItem_5", {{"procedural-module-declaration-element", "EOS"}} },
    { "class-module-declaration-section_op_7_dup_9", {{}, {"class-module-declaration-section_op_7_dup_basicItem_8", "class-module-declaration-section_op_7_dup_9"}} },
    { "class-module-declaration-section_op_7_dup_basicItem_8", {{"class-module-directive-element", "EOS"}} },
    { "class-module-declaration-section_op_7", {{"class-module-declaration-section_op_7_dup_9", "def-directive"}, {}} },
    { "class-module-declaration-section_dup_11", {{}, {"class-module-declaration-section_dup_basicItem_10", "class-module-declaration-section_dup_11"}} },
    { "class-module-declaration-section_dup_basicItem_10", {{"class-module-declaration-element", "EOS"}} },
    { "option-compare-directive_com_12", {{"terminal-179"}, {"terminal-180"}} },
    { "def-directive_dup_14", {{}, {"def-directive_dup_basicItem_13", "def-directive_dup_14"}} },
    { "def-directive_dup_basicItem_13", {{"terminal-184", "letter-spec"}} },
    { "public-variable-declaration_op_15", {{"terminal-117"}, {}} },
    { "private-variable-declaration_com_16", {{"terminal-89"}, {"terminal-60"}} },
    { "private-variable-declaration_op_17", {{"terminal-117"}, {}} },
    { "module-variable-declaration-list_com_18", {{"withevents-variable-dcl"}, {"variable-dcl"}} },
    { "module-variable-declaration-list_dup_basicItem_19_com_20", {{"withevents-variable-dcl"}, {"variable-dcl"}} },
    { "module-variable-declaration-list_dup_21", {{}, {"module-variable-declaration-list_dup_basicItem_19", "module-variable-declaration-list_dup_21"}} },
    { "module-variable-declaration-list_dup_basicItem_19", {{"terminal-184", "module-variable-declaration-list_dup_basicItem_19_com_20"}} },
    { "variable-declaration-list_dup_23", {{}, {"variable-declaration-list_dup_basicItem_22", "variable-declaration-list_dup_23"}} },
    { "variable-declaration-list_dup_basicItem_22", {{"terminal-184", "variable-dcl"}} },
    { "typed-variable-dcl_op_24", {{"array-dim"}, {}} },
    { "untyped-variable-dcl_op_25", {{"array-clause"}, {"as-clause"}, {}} },
    { "array-clause_op_26", {{"as-clause"}, {}} },
    { "as-clause_com_27", {{"as-auto-object"}, {"as-type"}} },
    { "array-dim_op_28", {{"bounds-list"}, {}} },
    { "bounds-list_dup_30", {{}, {"bounds-list_dup_basicItem_29", "bounds-list_dup_30"}} },
    { "bounds-list_dup_basicItem_29", {{"terminal-184", "dim-spec"}} },
    { "public-const-declaration_com_31", {{"terminal-74"}, {"terminal-90"}} },
    { "private-const-declaration_op_32", {{"terminal-89"}, {}} },
    { "const-item-list_dup_basicItem_33_op_34", {{"terminal-184", "const-item"}, {}} },
    { "const-item-list_dup_35", {{}, {"const-item-list_dup_basicItem_33", "const-item-list_dup_35"}} },
    { "const-item-list_dup_basicItem_33", {{"const-item-list_dup_basicItem_33_op_34"}} },
    { "untyped-name-const-item_op_36", {{"const-as-clause"}, {}} },
    { "public-type-declaration_op_37", {{"terminal-74"}, {"terminal-90"}, {}} },
    { "udt-member-list_dup_basicItem_38_op_39", {{"EOS", "udt-element"}, {}} },
    { "udt-member-list_dup_40", {{}, {"udt-member-list_dup_basicItem_38", "udt-member-list_dup_40"}} },
    { "udt-member-list_dup_basicItem_38", {{"udt-member-list_dup_basicItem_38_op_39"}} },
    { "optional-array-clause_op_41", {{"array-dim"}, {}} },
    { "public-enum-declaration_op_42", {{"terminal-90"}, {}} },
    { "enum-member-list_dup_44", {{"enum-member-list_dup_basicItem_43"}, {"enum-member-list_dup_basicItem_43", "enum-member-list_dup_44"}} },
    { "enum-member-list_dup_basicItem_43", {{"enum-element", "EOS"}} },
    { "enum-member_op_45", {{"terminal-189", "constant-expression"}, {}} },
    { "public-external-procedure-declaration_op_46", {{"terminal-90"}, {}} },
    { "external-proc-dcl_op_47", {{"terminal-190"}, {}} },
    { "external-proc-dcl_com_48", {{"external-sub"}, {"external-function"}} },
    { "external-sub_op_49", {{"procedure-parameters"}, {}} },
    { "external-function_op_50", {{"procedure-parameters"}, {}} },
    { "external-function_op_51", {{"function-type"}, {}} },
    { "lib-info_op_52", {{"alias-clause"}, {}} },
    { "event-declaration_op_53", {{"terminal-90"}, {}} },
    { "event-declaration_op_54", {{"event-parameter-list"}, {}} },
    { "event-parameter-list_op_55", {{"positional-parameters"}, {}} },
    { "procedural-module-code-section_dup_57", {{}, {"procedural-module-code-section_dup_basicItem_56", "procedural-module-code-section_dup_57"}} },
    { "procedural-module-code-section_dup_basicItem_56", {{"procedural-module-code-element", "LINE-END"}} },
    { "class-module-code-section_dup_59", {{}, {"class-module-code-section_dup_basicItem_58", "class-module-code-section_dup_59"}} },
    { "class-module-code-section_dup_basicItem_58", {{"class-module-code-element", "LINE-END"}} },
    { "subroutine-declaration_op_60", {{"initial-static"}, {}} },
    { "subroutine-declaration_op_61", {{"procedure-parameters"}, {}} },
    { "subroutine-declaration_op_62", {{"trailing-static"}, {}} },
    { "subroutine-declaration_op_63", {{"procedure-body", "EOS"}, {}} },
    { "subroutine-declaration_op_64", {{"end-label"}, {}} },
    { "function-declaration_op_65", {{"initial-static"}, {}} },
    { "function-declaration_op_66", {{"procedure-parameters"}, {}} },
    { "function-declaration_op_67", {{"function-type"}, {}} },
    { "function-declaration_op_68", {{"trailing-static"}, {}} },
    { "function-declaration_op_69", {{"procedure-body", "EOS"}, {}} },
    { "function-declaration_op_70", {{"end-label"}, {}} },
    { "property-get-declaration_op_71", {{"initial-static"}, {}} },
    { "property-get-declaration_op_72", {{"procedure-parameters"}, {}} },
    { "property-get-declaration_op_73", {{"function-type"}, {}} },
    { "property-get-declaration_op_74", {{"trailing-static"}, {}} },
    { "property-get-declaration_op_75", {{"procedure-body", "EOS"}, {}} },
    { "property-get-declaration_op_76", {{"end-label"}, {}} },
    { "property-lhs-declaration_op_77", {{"initial-static"}, {}} },
    { "property-lhs-declaration_com_78", {{"terminal-80"}, {"terminal-99"}} },
    { "property-lhs-declaration_op_79", {{"trailing-static"}, {}} },
    { "property-lhs-declaration_op_80", {{"procedure-body", "EOS"}, {}} },
    { "property-lhs-declaration_op_81", {{"end-label"}, {}} },
    { "procedure-tail_op_82", {{"Whitespace"}, {}} },
    { "procedure-scope_op_83", {{"terminal-74"}, {"terminal-90"}, {"terminal-89"}, {"terminal-71"}, {}} },
    { "function-type_op_84", {{"array-designator"}, {}} },
    { "procedure-parameters_op_85", {{"parameter-list"}, {}} },
    { "property-parameters_op_86", {{"parameter-list", "terminal-184"}, {}} },
    { "parameter-list_op_87", {{"terminal-184", "param-array"}, {}} },
    { "positional-parameters_dup_89", {{}, {"positional-parameters_dup_basicItem_88", "positional-parameters_dup_89"}} },
    { "positional-parameters_dup_basicItem_88", {{"terminal-184", "positional-param"}} },
    { "optional-parameters_dup_91", {{}, {"optional-parameters_dup_basicItem_90", "optional-parameters_dup_91"}} },
    { "optional-parameters_dup_basicItem_90", {{"terminal-184", "optional-param"}} },
    { "positional-param_op_92", {{"parameter-mechanism"}, {}} },
    { "optional-param_op_93", {{"default-value"}, {}} },
    { "param-array_op_94_com_95", {{"terminal-16"}, {"terminal-194"}} },
    { "param-array_op_94", {{"terminal-111", "param-array_op_94_com_95"}, {}} },
    { "untyped-name-param-dcl_op_96", {{"parameter-type"}, {}} },
    { "typed-name-param-dcl_op_97", {{"array-designator"}, {}} },
    { "optional-prefix_op_98", {{"parameter-mechanism"}, {}} },
    { "optional-prefix_op_99", {{"parameter-mechanism"}, {}} },
    { "parameter-type_op_100", {{"array-designator"}, {}} },
    { "parameter-type_com_101", {{"type-expression"}, {"terminal-110"}} },
    { "statement-block_dup_103", {{}, {"statement-block_dup_basicItem_102", "statement-block_dup_103"}} },
    { "statement-block_dup_basicItem_102", {{"block-statement", "EOS"}} },
    { "attribute-statement_op_104", {{"Identifier", "terminal-198"}, {}} },
    { "attribute-statement_op_105", {{"Quoted-identifier"}, {"boolean-literal-identifier"}, {}} },
    { "statement-label-definition_com_106_op_107", {{"terminal-0"}, {}} },
    { "statement-label-definition_com_106", {{"identifier-statement-label", "terminal-0"}, {"line-number-label", "statement-label-definition_com_106_op_107"}} },
    { "statement-label-list_op_108", {{"terminal-184", "statement-label"}, {}} },
    { "call-statement_com_109", {{"simple-name-expression"}, {"member-access-expression"}, {"index-expression"}, {"with-expression"}} },
    { "call-statement_com_110", {{"simple-name-expression"}, {"member-access-expression"}, {"with-expression"}} },
    { "explicit-for-statement_com_111", {{"terminal-84"}, {"nested-for-statement", "terminal-184"}} },
    { "for-clause_op_112", {{"step-clause"}, {}} },
    { "explicit-for-each-statement_com_113", {{"terminal-84"}, {"nested-for-statement", "terminal-184"}} },
    { "do-statement_op_114", {{"condition-clause"}, {}} },
    { "do-statement_op_115", {{"condition-clause"}, {}} },
    { "if-statement_dup_117", {{}, {"if-statement_dup_basicItem_116", "if-statement_dup_117"}} },
    { "if-statement_dup_basicItem_116", {{"else-if-block"}} },
    { "if-statement_op_118", {{"else-block"}, {}} },
    { "if-statement_com_119", {{"terminal-64", "terminal-77"}, {"terminal-65"}} },
    { "if-with-non-empty-then_op_120", {{"single-line-else-clause"}, {}} },
    { "single-line-else-clause_op_121", {{"list-or-label"}, {}} },
    { "list-or-label_dup_basicItem_122_op_123_op_124", {{"same-line-statement"}, {}} },
    { "list-or-label_dup_basicItem_122_op_123", {{"terminal-0", "list-or-label_dup_basicItem_122_op_123_op_124"}, {}} },
    { "list-or-label_dup_125", {{}, {"list-or-label_dup_basicItem_122", "list-or-label_dup_125"}} },
    { "list-or-label_dup_basicItem_122", {{"list-or-label_dup_basicItem_122_op_123"}} },
    { "list-or-label_op_126", {{"terminal-0"}, {}} },
    { "list-or-label_dup_basicItem_127_op_128_op_129", {{"same-line-statement"}, {}} },
    { "list-or-label_dup_basicItem_127_op_128", {{"terminal-0", "list-or-label_dup_basicItem_127_op_128_op_129"}, {}} },
    { "list-or-label_dup_130", {{}, {"list-or-label_dup_basicItem_127", "list-or-label_dup_130"}} },
    { "list-or-label_dup_basicItem_127", {{"list-or-label_dup_basicItem_127_op_128"}} },
    { "select-case-statement_dup_basicItem_131_op_132", {{"case-clause"}, {}} },
    { "select-case-statement_dup_133", {{}, {"select-case-statement_dup_basicItem_131", "select-case-statement_dup_133"}} },
    { "select-case-statement_dup_basicItem_131", {{"select-case-statement_dup_basicItem_131_op_132"}} },
    { "select-case-statement_op_134", {{"case-else-clause"}, {}} },
    { "case-clause_dup_136", {{}, {"case-clause_dup_basicItem_135", "case-clause_dup_136"}} },
    { "case-clause_dup_basicItem_135", {{"terminal-184", "range-clause"}} },
    { "range-clause_op_137", {{"terminal-131"}, {}} },
    { "goto-statement_com_138", {{"terminal-202", "terminal-126"}, {"terminal-76"}} },
    { "gosub-statement_com_139", {{"terminal-202", "terminal-102"}, {"terminal-75"}} },
    { "raiseevent-statement_op_140", {{"terminal-186", "event-argument-list", "terminal-187"}, {}} },
    { "event-argument-list_op_141_dup_143", {{}, {"event-argument-list_op_141_dup_basicItem_142", "event-argument-list_op_141_dup_143"}} },
    { "event-argument-list_op_141_dup_basicItem_142", {{"terminal-184", "event-argument"}} },
    { "event-argument-list_op_141", {{"event-argument", "event-argument-list_op_141_dup_143"}, {}} },
    { "local-variable-declaration_op_144", {{"terminal-117"}, {}} },
    { "redim-statement_op_145", {{"terminal-122"}, {}} },
    { "redim-declaration-list_dup_147", {{}, {"redim-declaration-list_dup_basicItem_146", "redim-declaration-list_dup_147"}} },
    { "redim-declaration-list_dup_basicItem_146", {{"terminal-184", "redim-variable-dcl"}} },
    { "dynamic-bounds-list_dup_basicItem_148_op_149", {{"terminal-184", "dynamic-dim-spec"}, {}} },
    { "dynamic-bounds-list_dup_150", {{}, {"dynamic-bounds-list_dup_basicItem_148", "dynamic-bounds-list_dup_150"}} },
    { "dynamic-bounds-list_dup_basicItem_148", {{"dynamic-bounds-list_dup_basicItem_148_op_149"}} },
    { "dynamic-dim-spec_op_151", {{"dynamic-lower-bound"}, {}} },
    { "dynamic-array-clause_op_152", {{"as-clause"}, {}} },
    { "erase-list_dup_basicItem_153_op_154", {{"terminal-184", "erase-element"}, {}} },
    { "erase-list_dup_155", {{}, {"erase-list_dup_basicItem_153", "erase-list_dup_155"}} },
    { "erase-list_dup_basicItem_153", {{"erase-list_dup_basicItem_153_op_154"}} },
    { "mid-statement_op_156", {{"terminal-184", "length"}, {}} },
    { "mode-specifier_com_157", {{"terminal-204"}, {"terminal-205"}, {"terminal-206"}, {"terminal-207"}} },
    { "let-statement_op_158", {{"terminal-80"}, {}} },
    { "error-behavior_com_159", {{"statement-label"}, {"terminal-209"}} },
    { "resume-statement_op_160_com_161", {{"terminal-84"}, {"statement-label"}} },
    { "resume-statement_op_160", {{"resume-statement_op_160_com_161"}, {}} },
    { "open-statement_op_162", {{"mode-clause"}, {}} },
    { "open-statement_op_163", {{"access-clause"}, {}} },
    { "open-statement_op_164", {{"lock"}, {}} },
    { "open-statement_op_165", {{"len-clause"}, {}} },
    { "close-statement_op_166", {{"file-number-list"}, {}} },
    { "file-number-list_dup_basicItem_167_op_168", {{"terminal-184", "file-number"}, {}} },
    { "file-number-list_dup_169", {{}, {"file-number-list_dup_basicItem_167", "file-number-list_dup_169"}} },
    { "file-number-list_dup_basicItem_167", {{"file-number-list_dup_basicItem_167_op_168"}} },
    { "lock-statement_op_170", {{"terminal-184", "record-range"}, {}} },
    { "record-range_op_171", {{"start-record-number"}, {}} },
    { "unlock-statement_op_172", {{"terminal-184", "record-range"}, {}} },
    { "print-statement_op_173_com_174", {{"terminal-32"}, {"terminal-38"}} },
    { "print-statement_op_173", {{"print-statement_op_173_com_174", "terminal-198"}, {}} },
    { "print-statement_op_175", {{"output-list"}, {}} },
    { "output-list_dup_177", {{}, {"output-list_dup_basicItem_176", "output-list_dup_177"}} },
    { "output-list_dup_basicItem_176", {{"output-item"}} },
    { "output-item_op_178", {{"output-clause"}, {}} },
    { "output-item_op_179", {{"char-position"}, {}} },
    { "output-clause_com_180", {{"spc-clause"}, {"tab-clause"}, {"output-expression"}} },
    { "char-position_com_181", {{"terminal-219"}, {"terminal-184"}} },
    { "tab-clause_op_182", {{"tab-number-clause"}, {}} },
    { "write-statement_op_183", {{"output-list"}, {}} },
    { "input-list_dup_basicItem_184_op_185", {{"terminal-184", "input-variable"}, {}} },
    { "input-list_dup_186", {{}, {"input-list_dup_basicItem_184", "input-list_dup_186"}} },
    { "input-list_dup_basicItem_184", {{"input-list_dup_basicItem_184_op_185"}} },
    { "put-statement_op_187", {{"record-number"}, {}} },
    { "get-statement_op_188", {{"record-number"}, {}} },
    { "literal-expression_op_189", {{"Type-suffix"}, {}} },
    { "inequality-operator-expression_com_190", {{"terminal-200", "terminal-201"}, {"terminal-201", "terminal-200"}} },
    { "less-than-equal-operator-expression_com_191", {{"terminal-200", "terminal-189"}, {"terminal-189", "terminal-200"}} },
    { "greater-than-equal-operator-expression_com_192", {{"terminal-201", "terminal-189"}, {"terminal-189", "terminal-201"}} },
    { "like-pattern-string_dup_194", {{}, {"like-pattern-string_dup_basicItem_193", "like-pattern-string_dup_194"}} },
    { "like-pattern-string_dup_basicItem_193", {{"like-pattern-element"}} },
    { "like-pattern-charlist_op_195", {{"terminal-227"}, {}} },
    { "like-pattern-charlist_op_196", {{"terminal-185"}, {}} },
    { "like-pattern-charlist_dup_198", {{}, {"like-pattern-charlist_dup_basicItem_197", "like-pattern-charlist_dup_198"}} },
    { "like-pattern-charlist_dup_basicItem_197", {{"like-pattern-charlist-element"}} },
    { "like-pattern-charlist_op_199", {{"terminal-185"}, {}} },
    { "argument-list_op_200", {{"positional-or-named-argument-list"}, {}} },
    { "positional-or-named-argument-list_dup_202", {{}, {"positional-or-named-argument-list_dup_basicItem_201", "positional-or-named-argument-list_dup_202"}} },
    { "positional-or-named-argument-list_dup_basicItem_201", {{"positional-argument", "terminal-184"}} },
    { "positional-or-named-argument-list_dup_204", {{}, {"positional-or-named-argument-list_dup_basicItem_203", "positional-or-named-argument-list_dup_204"}} },
    { "positional-or-named-argument-list_dup_basicItem_203", {{"positional-argument", "terminal-184"}} },
    { "positional-argument_op_205", {{"argument-expression"}, {}} },
    { "named-argument-list_dup_207", {{}, {"named-argument-list_dup_basicItem_206", "named-argument-list_dup_207"}} },
    { "named-argument-list_dup_basicItem_206", {{"terminal-184", "named-argument"}} },
    { "argument-expression_op_208", {{"terminal-195"}, {}} },
    { "dictionary-access-expression_op_209", {{"Line-continuation"}, {}} },
};
